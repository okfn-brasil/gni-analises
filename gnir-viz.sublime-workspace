{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"str_to_",
				"str_to_sentence"
			],
			[
				"str_to",
				"str_to_sentence"
			],
			[
				"abs",
				"abas_paf_org"
			],
			[
				"dt_",
				"dt_identificados"
			],
			[
				"dt",
				"dt_identificados"
			],
			[
				"m",
				"mutate_all"
			],
			[
				"grou",
				"group_by"
			],
			[
				"resp",
				"respondentes"
			],
			[
				"NA_",
				"NA_character_"
			],
			[
				"ra",
				"random_table"
			],
			[
				"prop_",
				"prop_vitorias"
			],
			[
				"prop",
				"prop_tributos"
			],
			[
				"do",
				"dollar_format"
			],
			[
				"tible",
				"tibble"
			],
			[
				"blue",
				"blue_abj"
			],
			[
				"group",
				"group_by"
			],
			[
				"read",
				"read_xlsx"
			],
			[
				"fa",
				"facet_wrap"
			],
			[
				"trans",
				"transmute"
			],
			[
				"str",
				"str_split"
			],
			[
				"selecionar",
				"selecionar_questao"
			],
			[
				"survey",
				"survey_data"
			],
			[
				"quest",
				"questao_grafico"
			],
			[
				"selec",
				"selecionar_respondente"
			],
			[
				"plot",
				"plotOutput"
			],
			[
				"selecio",
				"selecionar_questao"
			],
			[
				"str_",
				"str_squish"
			],
			[
				"drop",
				"drop_na"
			],
			[
				"bs4",
				"bs4Dash"
			],
			[
				"random",
				"random_text"
			],
			[
				"render",
				"renderUI"
			],
			[
				"dash",
				"dashboardPage"
			],
			[
				"df",
				"df_split"
			],
			[
				"C",
				"Connection"
			],
			[
				"skip",
				"SkipTest"
			],
			[
				"assert",
				"assertIsInstance"
			],
			[
				"as",
				"assertIsInstance"
			],
			[
				"de",
				"defaultdict"
			],
			[
				"che",
				"check_filepath"
			],
			[
				"check",
				"check_filepath"
			],
			[
				"par",
				"parsed_records_csv"
			],
			[
				"TY",
				"TYPE_COUNT_FROM_ACIS"
			],
			[
				"count",
				"count_records"
			],
			[
				"off",
				"offense_code"
			],
			[
				"offe",
				"offense_type"
			],
			[
				"drug",
				"drug_related"
			],
			[
				"methos",
				"method_results"
			],
			[
				"syl",
				"style"
			],
			[
				"inclu",
				"includeMarkdown"
			],
			[
				"expect_eq",
				"expect_equal"
			],
			[
				"vi",
				"visualize_bar"
			],
			[
				"visua",
				"visualize_line"
			],
			[
				"instal",
				"install.packages"
			],
			[
				"pop",
				"pop_collapsed"
			],
			[
				"tra",
				"transmute"
			],
			[
				"read_",
				"read_delim"
			],
			[
				"downloa",
				"download.file"
			],
			[
				"REO",
				"RECORD_TYPES"
			],
			[
				"str_repla",
				"str_replace"
			],
			[
				"anal",
				"analyze_race"
			],
			[
				"NA",
				"NA_character_"
			],
			[
				"per",
				"percentage"
			],
			[
				"high",
				"highcharter"
			],
			[
				"acis",
				"acisViz"
			],
			[
				"process",
				"process_severity"
			],
			[
				"proces",
				"process_severity"
			],
			[
				"bar",
				"bar_labels"
			],
			[
				"proce",
				"process_severity"
			],
			[
				"h",
				"highcharter"
			],
			[
				"group_",
				"group_by"
			],
			[
				"replace",
				"str_replace"
			],
			[
				"stre",
				"str_replace_all"
			],
			[
				"install",
				"install_github"
			],
			[
				"coll",
				"collapsed"
			],
			[
				"shin",
				"shinipsum"
			],
			[
				"err",
				"error_html"
			],
			[
				"acs",
				"acisViz"
			],
			[
				"dt_co",
				"dt_citations"
			],
			[
				"repe",
				"repetitions"
			],
			[
				"vis",
				"visualize_bar"
			],
			[
				"eleme",
				"element_text"
			],
			[
				"bind",
				"bind_rows"
			],
			[
				"viol",
				"violence_severity"
			],
			[
				"violen",
				"violent_offenses"
			],
			[
				"goru",
				"group_by"
			],
			[
				"bs4dash",
				"bs4dash_font"
			],
			[
				"elem",
				"element_text"
			],
			[
				"line",
				"line_colors"
			],
			[
				"li",
				"line_colors"
			],
			[
				"ana",
				"analyze_counts"
			],
			[
				"co",
				"county_code"
			],
			[
				"gr",
				"group_by"
			],
			[
				"wrangl",
				"wrangle_citations"
			],
			[
				"offse",
				"offense_severity"
			],
			[
				"offense",
				"offense_level"
			],
			[
				"offense_",
				"offense_severity"
			],
			[
				"row",
				"row_number"
			],
			[
				"juris",
				"jurisdiction"
			],
			[
				"counti",
				"counties_shapefiles"
			],
			[
				"ex",
				"expect_true"
			],
			[
				"tid",
				"tidy_incidents"
			],
			[
				"coun",
				"counties_shapefiles"
			],
			[
				"tota",
				"total_years"
			],
			[
				"side",
				"sidebarPanel"
			],
			[
				"sidebar",
				"sidebarLayout"
			],
			[
				"output",
				"outputId"
			],
			[
				"fluid",
				"fluidPage"
			],
			[
				"gro",
				"group_by"
			],
			[
				"tab",
				"tabPanel"
			],
			[
				"collap",
				"collapsible"
			],
			[
				"prep",
				"prepare_dt_incidents"
			],
			[
				"rad",
				"read_csv"
			],
			[
				"cou",
				"counties"
			],
			[
				"go",
				"group_by"
			],
			[
				"offen",
				"offense_severity"
			],
			[
				"ele",
				"element_blank"
			],
			[
				"data",
				"dataset_endpoint"
			],
			[
				"selet",
				"select"
			],
			[
				"groupb",
				"group_by"
			],
			[
				"down",
				"download.file"
			],
			[
				"TabI",
				"tabItem"
			],
			[
				"bs4Tab",
				"bs4TabItems"
			],
			[
				"right",
				"right_text"
			],
			[
				"sider",
				"sidebarUserPanel"
			],
			[
				"bs4Dash",
				"bs4DashPage"
			],
			[
				"spe",
				"spell_check_package"
			],
			[
				"nre",
				"new_vector"
			],
			[
				"first",
				"first_NA"
			]
		]
	},
	"buffers":
	[
		{
			"file": ".Rbuildignore",
			"settings":
			{
				"buffer_size": 109,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "gnir-v"
					},
					"BgAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYAAAAAAAAARgAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "iz.subl"
					},
					"BwAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "ime-pro"
					},
					"BwAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAABVAAAAAAAAAFYAAAAAAAAAAAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAFkAAAAAAAAAWgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMAAAAAAAAAUwAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "ject"
					},
					"BAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoAAAAAAAAAWgAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAF4AAAAAAAAAXwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4AAAAAAAAAXgAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAXi4qXC5ScHJvaiQKXlwuUnByb2pcLnVzZXIkCl5kYXRhLXJhdyQKZGV2X2hpc3RvcnkuUgpeZGV2JAokcnVuX2Rldi4qCmduaXItdml6LnN1YmxpbWUtcHJvamVjdAoAAAAAAAAAAG0AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8AAAAAAAAAXwAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAAAAXi4qXC5ScHJvaiQKXlwuUnByb2pcLnVzZXIkCl5kYXRhLXJhdyQKZGV2X2hpc3RvcnkuUgpeZGV2JAokcnVuX2Rldi4qCmduaXItdml6LnN1YmxpbWUtcHJvamVjdApeTElDRU5TRVwubWQkCgAAAAAAAAAAewAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8AAAAAAAAAXwAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"",
					null,
					"AQAAAEYAAAAAAAAARwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYAAAAAAAAARgAAAAAAAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"",
					null,
					"AQAAAEYAAAAAAAAARgAAAAAAAAACAAAAy4Y",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcAAAAAAAAARwAAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "ˆ"
					},
					"AQAAAEYAAAAAAAAARwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYAAAAAAAAARgAAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"left_delete",
					null,
					"AQAAAEYAAAAAAAAARgAAAAAAAAACAAAAy4Y",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcAAAAAAAAARwAAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "^"
					},
					"AQAAAEYAAAAAAAAARwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYAAAAAAAAARgAAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAE8AAAAAAAAAUAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8AAAAAAAAATwAAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAGAAAAAAAAAAYQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAAAAAAAAAAYAAAAAAAAAD////////vfw"
				],
				[
					66,
					1,
					"right_delete",
					null,
					"AQAAAEcAAAAAAAAARwAAAAAAAAAJAAAAZ25pci12aXpc",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAAAAAAAAAARwAAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAEgAAAAAAAAASQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					9,
					"right_delete",
					null,
					"CQAAAFAAAAAAAAAAUAAAAAAAAAABAAAALVAAAAAAAAAAUAAAAAAAAAABAAAAcFAAAAAAAAAAUAAAAAAAAAABAAAAclAAAAAAAAAAUAAAAAAAAAABAAAAb1AAAAAAAAAAUAAAAAAAAAABAAAAalAAAAAAAAAAUAAAAAAAAAABAAAAZVAAAAAAAAAAUAAAAAAAAAABAAAAY1AAAAAAAAAAUAAAAAAAAAABAAAAdFAAAAAAAAAAUAAAAAAAAAABAAAAJA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "dev/01_start.R",
			"settings":
			{
				"buffer_size": 2251,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "GN"
					},
					"AwAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB8AwAAAAAAAAkAAABQS0dfVElUTEV8AwAAAAAAAH0DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsDAAAAAAAAhAMAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					2,
					"left_delete",
					null,
					"AgAAAHwDAAAAAAAAfAMAAAAAAAABAAAATnsDAAAAAAAAewMAAAAAAAABAAAARw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0DAAAAAAAAfQMAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "gnir"
					},
					"BAAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAB9AwAAAAAAAH4DAAAAAAAAAAAAAH4DAAAAAAAAfwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsDAAAAAAAAewMAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"left_delete",
					null,
					"AQAAAH4DAAAAAAAAfgMAAAAAAAABAAAAcg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8DAAAAAAAAfwMAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "R:"
					},
					"AgAAAH4DAAAAAAAAfwMAAAAAAAAAAAAAfwMAAAAAAACAAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4DAAAAAAAAfgMAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIADAAAAAAAAgQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIADAAAAAAAAgAMAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "P"
					},
					"AQAAAIEDAAAAAAAAggMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEDAAAAAAAAgQMAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAIEDAAAAAAAAgQMAAAAAAAABAAAAUA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIDAAAAAAAAggMAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAIEDAAAAAAAAggMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEDAAAAAAAAgQMAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAIEDAAAAAAAAgQMAAAAAAAABAAAARA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIDAAAAAAAAggMAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "Relat"
					},
					"BQAAAIEDAAAAAAAAggMAAAAAAAAAAAAAggMAAAAAAACDAwAAAAAAAAAAAACDAwAAAAAAAIQDAAAAAAAAAAAAAIQDAAAAAAAAhQMAAAAAAAAAAAAAhQMAAAAAAACGAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEDAAAAAAAAgQMAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"",
					null,
					"AQAAAIYDAAAAAAAAhwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYDAAAAAAAAhgMAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"",
					null,
					"AQAAAIYDAAAAAAAAhgMAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcDAAAAAAAAhwMAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "ório"
					},
					"BAAAAIYDAAAAAAAAhwMAAAAAAAAAAAAAhwMAAAAAAACIAwAAAAAAAAAAAACIAwAAAAAAAIkDAAAAAAAAAAAAAIkDAAAAAAAAigMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYDAAAAAAAAhgMAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAIoDAAAAAAAAiwMAAAAAAAAAAAAAiwMAAAAAAACMAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoDAAAAAAAAigMAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " App"
					},
					"BAAAAIwDAAAAAAAAjQMAAAAAAAAAAAAAjQMAAAAAAACOAwAAAAAAAAAAAACOAwAAAAAAAI8DAAAAAAAAAAAAAI8DAAAAAAAAkAMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwDAAAAAAAAjAMAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " do"
					},
					"AwAAAJADAAAAAAAAkQMAAAAAAAAAAAAAkQMAAAAAAACSAwAAAAAAAAAAAACSAwAAAAAAAJMDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJADAAAAAAAAkAMAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " Di"
					},
					"AwAAAJMDAAAAAAAAlAMAAAAAAAAAAAAAlAMAAAAAAACVAwAAAAAAAAAAAACVAwAAAAAAAJYDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMDAAAAAAAAkwMAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"",
					null,
					"AQAAAJYDAAAAAAAAlwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYDAAAAAAAAlgMAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"",
					null,
					"AQAAAJYDAAAAAAAAlgMAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcDAAAAAAAAlwMAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "ário"
					},
					"BAAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAACYAwAAAAAAAJkDAAAAAAAAAAAAAJkDAAAAAAAAmgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYDAAAAAAAAlgMAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " do"
					},
					"AwAAAJoDAAAAAAAAmwMAAAAAAAAAAAAAmwMAAAAAAACcAwAAAAAAAAAAAACcAwAAAAAAAJ0DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoDAAAAAAAAmgMAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " Clima"
					},
					"BgAAAJ0DAAAAAAAAngMAAAAAAAAAAAAAngMAAAAAAACfAwAAAAAAAAAAAACfAwAAAAAAAKADAAAAAAAAAAAAAKADAAAAAAAAoQMAAAAAAAAAAAAAoQMAAAAAAACiAwAAAAAAAAAAAACiAwAAAAAAAKMDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0DAAAAAAAAnQMAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAANMDAAAAAAAA0wMAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMDAAAAAAAAowMAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "Este"
					},
					"BQAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA6gMAAAAAAADqAwAAAAAAAAgAAABQS0dfREVTQ+oDAAAAAAAA6wMAAAAAAAAAAAAA6wMAAAAAAADsAwAAAAAAAAAAAADsAwAAAAAAAO0DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEDAAAAAAAA6QMAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " pacote"
					},
					"BwAAAO0DAAAAAAAA7gMAAAAAAAAAAAAA7gMAAAAAAADvAwAAAAAAAAAAAADvAwAAAAAAAPADAAAAAAAAAAAAAPADAAAAAAAA8QMAAAAAAAAAAAAA8QMAAAAAAADyAwAAAAAAAAAAAADyAwAAAAAAAPMDAAAAAAAAAAAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0DAAAAAAAA7QMAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " cr"
					},
					"AwAAAPQDAAAAAAAA9QMAAAAAAAAAAAAA9QMAAAAAAAD2AwAAAAAAAAAAAAD2AwAAAAAAAPcDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQDAAAAAAAA9AMAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "iar"
					},
					"AwAAAPcDAAAAAAAA+AMAAAAAAAAAAAAA+AMAAAAAAAD5AwAAAAAAAAAAAAD5AwAAAAAAAPoDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcDAAAAAAAA9wMAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " os"
					},
					"AwAAAPoDAAAAAAAA+wMAAAAAAAAAAAAA+wMAAAAAAAD8AwAAAAAAAAAAAAD8AwAAAAAAAP0DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoDAAAAAAAA+gMAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " relat"
					},
					"BgAAAP0DAAAAAAAA/gMAAAAAAAAAAAAA/gMAAAAAAAD/AwAAAAAAAAAAAAD/AwAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAMEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0DAAAAAAAA/QMAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"",
					null,
					"AQAAAAMEAAAAAAAABAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMEAAAAAAAAAwQAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"",
					null,
					"AQAAAAMEAAAAAAAAAwQAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "ório"
					},
					"BAAAAAMEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAFBAAAAAAAAAAAAAAFBAAAAAAAAAYEAAAAAAAAAAAAAAYEAAAAAAAABwQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMEAAAAAAAAAwQAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcEAAAAAAAACAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcEAAAAAAAABwQAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAAAcEAAAAAAAABwQAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAAcEAAAAAAAACAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcEAAAAAAAABwQAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAAcEAAAAAAAABwQAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"right_delete",
					null,
					"AQAAAPwDAAAAAAAA/AMAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwDAAAAAAAA/AMAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUEAAAAAAAABgQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUEAAAAAAAABQQAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAAUEAAAAAAAABQQAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYEAAAAAAAABgQAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAAYEAAAAAAAABwQAAAAAAAAAAAAABwQAAAAAAAAIBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYEAAAAAAAABgQAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " o"
					},
					"AgAAAAgEAAAAAAAACQQAAAAAAAAAAAAACQQAAAAAAAAKBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAAAoEAAAAAAAACwQAAAAAAAAAAAAACwQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAAA0EAAAAAAAAAAAAAA0EAAAAAAAADgQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoEAAAAAAAACgQAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " de"
					},
					"AwAAAA4EAAAAAAAADwQAAAAAAAAAAAAADwQAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAABEEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4EAAAAAAAADgQAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " visualiza"
					},
					"CgAAABEEAAAAAAAAEgQAAAAAAAAAAAAAEgQAAAAAAAATBAAAAAAAAAAAAAATBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAFQQAAAAAAAAAAAAAFQQAAAAAAAAWBAAAAAAAAAAAAAAWBAAAAAAAABcEAAAAAAAAAAAAABcEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAZBAAAAAAAAAAAAAAZBAAAAAAAABoEAAAAAAAAAAAAABoEAAAAAAAAGwQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEEAAAAAAAAEQQAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"",
					null,
					"AQAAABsEAAAAAAAAHAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsEAAAAAAAAGwQAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"",
					null,
					"AQAAABsEAAAAAAAAGwQAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "ç"
					},
					"AQAAABsEAAAAAAAAHAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsEAAAAAAAAGwQAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"",
					null,
					"AQAAABwEAAAAAAAAHQQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"",
					null,
					"AQAAABwEAAAAAAAAHAQAAAAAAAACAAAAy5w",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0EAAAAAAAAHQQAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "ão"
					},
					"AgAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAeBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " de"
					},
					"AwAAAB4EAAAAAAAAHwQAAAAAAAAAAAAAHwQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACEEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4EAAAAAAAAHgQAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " resultados"
					},
					"CwAAACEEAAAAAAAAIgQAAAAAAAAAAAAAIgQAAAAAAAAjBAAAAAAAAAAAAAAjBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAJQQAAAAAAAAAAAAAJQQAAAAAAAAmBAAAAAAAAAAAAAAmBAAAAAAAACcEAAAAAAAAAAAAACcEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAApBAAAAAAAAAAAAAApBAAAAAAAACoEAAAAAAAAAAAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAAsBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEEAAAAAAAAIQQAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " do"
					},
					"AwAAACwEAAAAAAAALQQAAAAAAAAAAAAALQQAAAAAAAAuBAAAAAAAAAAAAAAuBAAAAAAAAC8EAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwEAAAAAAAALAQAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " d"
					},
					"AgAAAC8EAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAAxBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8EAAAAAAAALwQAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAADAEAAAAAAAAMAQAAAAAAAABAAAAZA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEEAAAAAAAAMQQAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "Di"
					},
					"AgAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAEAAAAAAAAMAQAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"",
					null,
					"AQAAADIEAAAAAAAAMwQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIEAAAAAAAAMgQAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"",
					null,
					"AQAAADIEAAAAAAAAMgQAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMEAAAAAAAAMwQAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "ário"
					},
					"BAAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANgQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIEAAAAAAAAMgQAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " do"
					},
					"AwAAADYEAAAAAAAANwQAAAAAAAAAAAAANwQAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADkEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYEAAAAAAAANgQAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " Clima"
					},
					"BgAAADkEAAAAAAAAOgQAAAAAAAAAAAAAOgQAAAAAAAA7BAAAAAAAAAAAAAA7BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAPQQAAAAAAAAAAAAAPQQAAAAAAAA+BAAAAAAAAAAAAAA+BAAAAAAAAD8EAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkEAAAAAAAAOQQAAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAHYEAAAAAAAAdgQAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8EAAAAAAAAPwQAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAI0EAAAAAAAAjgQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0EAAAAAAAAjQQAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAAI0EAAAAAAAAjQQAAAAAAAABAAAAYw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4EAAAAAAAAjgQAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "c("
					},
					"AgAAAI0EAAAAAAAAjgQAAAAAAAAAAAAAjgQAAAAAAACPBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0EAAAAAAAAjQQAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAABcDAAAAAAAAGAMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcDAAAAAAAAFwMAAAAAAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"right_delete",
					null,
					"AQAAABcDAAAAAAAAFwMAAAAAAAABAAAAPw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcDAAAAAAAAFwMAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					2,
					"left_delete",
					null,
					"AgAAAI4EAAAAAAAAjgQAAAAAAAABAAAAKI0EAAAAAAAAjQQAAAAAAAABAAAAYw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8EAAAAAAAAjwQAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "Andre"
					},
					"BgAAAI4EAAAAAAAAjwQAAAAAAAAAAAAAjwQAAAAAAACPBAAAAAAAAAwAAABBVVRIT1JfRklSU1SPBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAkQQAAAAAAAAAAAAAkQQAAAAAAACSBAAAAAAAAAAAAACSBAAAAAAAAJMEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4EAAAAAAAAmgQAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "Assumpcao"
					},
					"CgAAAL4EAAAAAAAAvwQAAAAAAAAAAAAAvwQAAAAAAAC/BAAAAAAAAAsAAABBVVRIT1JfTEFTVL8EAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADBBAAAAAAAAAAAAADBBAAAAAAAAMIEAAAAAAAAAAAAAMIEAAAAAAAAwwQAAAAAAAAAAAAAwwQAAAAAAADEBAAAAAAAAAAAAADEBAAAAAAAAMUEAAAAAAAAAAAAAMUEAAAAAAAAxgQAAAAAAAAAAAAAxgQAAAAAAADHBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4EAAAAAAAAyQQAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "andre.assumpcao@"
					},
					"EQAAAO0EAAAAAAAA7gQAAAAAAAAAAAAA7gQAAAAAAADuBAAAAAAAAA8AAABBVVRIT1JATUFJTC5DT03uBAAAAAAAAO8EAAAAAAAAAAAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAADxBAAAAAAAAAAAAADxBAAAAAAAAPIEAAAAAAAAAAAAAPIEAAAAAAAA8wQAAAAAAAAAAAAA8wQAAAAAAAD0BAAAAAAAAAAAAAD0BAAAAAAAAPUEAAAAAAAAAAAAAPUEAAAAAAAA9gQAAAAAAAAAAAAA9gQAAAAAAAD3BAAAAAAAAAAAAAD3BAAAAAAAAPgEAAAAAAAAAAAAAPgEAAAAAAAA+QQAAAAAAAAAAAAA+QQAAAAAAAD6BAAAAAAAAAAAAAD6BAAAAAAAAPsEAAAAAAAAAAAAAPsEAAAAAAAA/AQAAAAAAAAAAAAA/AQAAAAAAAD9BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwEAAAAAAAA7QQAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "gmail.com"
					},
					"CQAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA/gQAAAAAAAD/BAAAAAAAAAAAAAD/BAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAACBQAAAAAAAAAAAAACBQAAAAAAAAMFAAAAAAAAAAAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAYFAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0EAAAAAAAA/QQAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					5,
					"left_delete",
					null,
					"BQAAACcFAAAAAAAAJwUAAAAAAAABAAAAICYFAAAAAAAAJgUAAAAAAAABAAAATCUFAAAAAAAAJQUAAAAAAAABAAAATCQFAAAAAAAAJAUAAAAAAAABAAAAVSMFAAAAAAAAIwUAAAAAAAABAAAATg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgFAAAAAAAAKAUAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"",
					null,
					"AQAAACMFAAAAAAAAJAUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMFAAAAAAAAIwUAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"",
					null,
					"AQAAACMFAAAAAAAAIwUAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQFAAAAAAAAJAUAAAAAAAAAAAAAAADwvw"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACMFAAAAAAAAJAUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMFAAAAAAAAIwUAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"left_delete",
					null,
					"AQAAACMFAAAAAAAAIwUAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQFAAAAAAAAJAUAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"",
					null,
					"AQAAACMFAAAAAAAAJAUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMFAAAAAAAAIwUAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"",
					null,
					"AQAAACMFAAAAAAAAIwUAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQFAAAAAAAAJAUAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACMFAAAAAAAAJAUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMFAAAAAAAAIwUAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACQFAAAAAAAAJQUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQFAAAAAAAAJAUAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"",
					null,
					"AQAAACUFAAAAAAAAJgUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUFAAAAAAAAJQUAAAAAAAAAAAAAAADwvw"
				],
				[
					153,
					1,
					"",
					null,
					"AQAAACUFAAAAAAAAJQUAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYFAAAAAAAAJgUAAAAAAAAAAAAAAADwvw"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACUFAAAAAAAAJgUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUFAAAAAAAAJQUAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAACQFAAAAAAAAJQUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQFAAAAAAAAJAUAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"left_delete",
					null,
					"AQAAACQFAAAAAAAAJAUAAAAAAAABAAAAdA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUFAAAAAAAAJQUAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "http:"
					},
					"BQAAACQFAAAAAAAAJQUAAAAAAAAAAAAAJQUAAAAAAAAmBQAAAAAAAAAAAAAmBQAAAAAAACcFAAAAAAAAAAAAACcFAAAAAAAAKAUAAAAAAAAAAAAAKAUAAAAAAAApBQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQFAAAAAAAAJAUAAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAACkFAAAAAAAAKgUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkFAAAAAAAAKQUAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAACkFAAAAAAAAKQUAAAAAAAABAAAAOg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoFAAAAAAAAKgUAAAAAAAAAAAAAAADwvw"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "//github.com"
					},
					"DAAAACkFAAAAAAAAKgUAAAAAAAAAAAAAKgUAAAAAAAArBQAAAAAAAAAAAAArBQAAAAAAACwFAAAAAAAAAAAAACwFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAuBQAAAAAAAAAAAAAuBQAAAAAAAC8FAAAAAAAAAAAAAC8FAAAAAAAAMAUAAAAAAAAAAAAAMAUAAAAAAAAxBQAAAAAAAAAAAAAxBQAAAAAAADIFAAAAAAAAAAAAADIFAAAAAAAAMwUAAAAAAAAAAAAAMwUAAAAAAAA0BQAAAAAAAAAAAAA0BQAAAAAAADUFAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkFAAAAAAAAKQUAAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "/qua"
					},
					"BAAAADUFAAAAAAAANgUAAAAAAAAAAAAANgUAAAAAAAA3BQAAAAAAAAAAAAA3BQAAAAAAADgFAAAAAAAAAAAAADgFAAAAAAAAOQUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUFAAAAAAAANQUAAAAAAAAAAAAAAADwvw"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "estiotre"
					},
					"CAAAADkFAAAAAAAAOgUAAAAAAAAAAAAAOgUAAAAAAAA7BQAAAAAAAAAAAAA7BQAAAAAAADwFAAAAAAAAAAAAADwFAAAAAAAAPQUAAAAAAAAAAAAAPQUAAAAAAAA+BQAAAAAAAAAAAAA+BQAAAAAAAD8FAAAAAAAAAAAAAD8FAAAAAAAAQAUAAAAAAAAAAAAAQAUAAAAAAABBBQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkFAAAAAAAAOQUAAAAAAAAAAAAAAADwvw"
				],
				[
					165,
					2,
					"left_delete",
					null,
					"AgAAAEAFAAAAAAAAQAUAAAAAAAABAAAAZT8FAAAAAAAAPwUAAAAAAAABAAAAcg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEFAAAAAAAAQQUAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "ech/"
					},
					"BAAAAD8FAAAAAAAAQAUAAAAAAAAAAAAAQAUAAAAAAABBBQAAAAAAAAAAAABBBQAAAAAAAEIFAAAAAAAAAAAAAEIFAAAAAAAAQwUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8FAAAAAAAAPwUAAAAAAAAAAAAAAADwvw"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "gnir"
					},
					"BAAAAEMFAAAAAAAARAUAAAAAAAAAAAAARAUAAAAAAABFBQAAAAAAAAAAAABFBQAAAAAAAEYFAAAAAAAAAAAAAEYFAAAAAAAARwUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMFAAAAAAAAQwUAAAAAAAAAAAAAAADwvw"
				],
				[
					168,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAHAFAAAAAAAAcAUAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcFAAAAAAAARwUAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"right_delete",
					null,
					"AQAAAEcFAAAAAAAARwUAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcFAAAAAAAARwUAAAAAAAAAAAAAAADwvw"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEgFAAAAAAAASQUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgFAAAAAAAASAUAAAAAAAAAAAAAAADwvw"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "Andre"
					},
					"BgAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAOBgAAAAAAAAoAAABHb2xlbSBVc2VyDgYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0GAAAAAAAAFwYAAAAAAAAAAAAAAADwvw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " Assumpcao"
					},
					"CgAAABIGAAAAAAAAEwYAAAAAAAAAAAAAEwYAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABUGAAAAAAAAAAAAABUGAAAAAAAAFgYAAAAAAAAAAAAAFgYAAAAAAAAXBgAAAAAAAAAAAAAXBgAAAAAAABgGAAAAAAAAAAAAABgGAAAAAAAAGQYAAAAAAAAAAAAAGQYAAAAAAAAaBgAAAAAAAAAAAAAaBgAAAAAAABsGAAAAAAAAAAAAABsGAAAAAAAAHAYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIGAAAAAAAAEgYAAAAAAAAAAAAAAADwvw"
				],
				[
					225,
					1,
					"",
					null,
					"FAAAAPYIAAAAAAAA9wgAAAAAAAABAAAAIukIAAAAAAAA6ggAAAAAAAABAAAAIh4IAAAAAAAAHwgAAAAAAAABAAAAIhIIAAAAAAAAEwgAAAAAAAABAAAAIrYGAAAAAAAAtwYAAAAAAAABAAAAIqkGAAAAAAAAqgYAAAAAAAABAAAAIhwGAAAAAAAAHQYAAAAAAAABAAAAIgwGAAAAAAAADQYAAAAAAAABAAAAIgYFAAAAAAAABwUAAAAAAAABAAAAIuwEAAAAAAAA7QQAAAAAAAABAAAAIscEAAAAAAAAyAQAAAAAAAABAAAAIr0EAAAAAAAAvgQAAAAAAAABAAAAIpMEAAAAAAAAlAQAAAAAAAABAAAAIo0EAAAAAAAAjgQAAAAAAAABAAAAIkAEAAAAAAAAQQQAAAAAAAABAAAAIugDAAAAAAAA6QMAAAAAAAABAAAAIqMDAAAAAAAApAMAAAAAAAABAAAAInoDAAAAAAAAewMAAAAAAAABAAAAIjsDAAAAAAAAPAMAAAAAAAABAAAAIjYDAAAAAAAANwMAAAAAAAABAAAAIg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAFAAAADYDAAAAAAAANwMAAAAAAAAAAAAAAADwvzsDAAAAAAAAPAMAAAAAAAAAAAAAAADwv3oDAAAAAAAAewMAAAAAAAAAAAAAAADwv6MDAAAAAAAApAMAAAAAAAAAAAAAAADwv+gDAAAAAAAA6QMAAAAAAAAAAAAAAADwv0AEAAAAAAAAQQQAAAAAAAAAAAAAAADwv40EAAAAAAAAjgQAAAAAAAAAAAAAAADwv5MEAAAAAAAAlAQAAAAAAAAAAAAAAADwv70EAAAAAAAAvgQAAAAAAAAAAAAAAADwv8cEAAAAAAAAyAQAAAAAAAAAAAAAAADwv+wEAAAAAAAA7QQAAAAAAAAAAAAAAADwvwYFAAAAAAAABwUAAAAAAAAAAAAAAADwvwwGAAAAAAAADQYAAAAAAAAAAAAAAADwvxwGAAAAAAAAHQYAAAAAAAAAAAAAAADwv6kGAAAAAAAAqgYAAAAAAAAAAAAAAADwv7YGAAAAAAAAtwYAAAAAAAAAAAAAAADwvxIIAAAAAAAAEwgAAAAAAAAAAAAAAADwvx4IAAAAAAAAHwgAAAAAAAAAAAAAAADwv+kIAAAAAAAA6ggAAAAAAAAAAAAAAADwv/YIAAAAAAAA9wgAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"",
					null,
					"FAAAAPYIAAAAAAAA9ggAAAAAAAABAAAAJ+kIAAAAAAAA6QgAAAAAAAABAAAAJx4IAAAAAAAAHggAAAAAAAABAAAAJxIIAAAAAAAAEggAAAAAAAABAAAAJ7YGAAAAAAAAtgYAAAAAAAABAAAAJ6kGAAAAAAAAqQYAAAAAAAABAAAAJxwGAAAAAAAAHAYAAAAAAAABAAAAJwwGAAAAAAAADAYAAAAAAAABAAAAJwYFAAAAAAAABgUAAAAAAAABAAAAJ+wEAAAAAAAA7AQAAAAAAAABAAAAJ8cEAAAAAAAAxwQAAAAAAAABAAAAJ70EAAAAAAAAvQQAAAAAAAABAAAAJ5MEAAAAAAAAkwQAAAAAAAABAAAAJ40EAAAAAAAAjQQAAAAAAAABAAAAJ0AEAAAAAAAAQAQAAAAAAAABAAAAJ+gDAAAAAAAA6AMAAAAAAAABAAAAJ6MDAAAAAAAAowMAAAAAAAABAAAAJ3oDAAAAAAAAegMAAAAAAAABAAAAJzsDAAAAAAAAOwMAAAAAAAABAAAAJzYDAAAAAAAANgMAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAFAAAADcDAAAAAAAANwMAAAAAAAAAAAAAAADwvzwDAAAAAAAAPAMAAAAAAAAAAAAAAADwv3sDAAAAAAAAewMAAAAAAAAAAAAAAADwv6QDAAAAAAAApAMAAAAAAAAAAAAAAADwv+kDAAAAAAAA6QMAAAAAAAAAAAAAAADwv0EEAAAAAAAAQQQAAAAAAAAAAAAAAADwv44EAAAAAAAAjgQAAAAAAAAAAAAAAADwv5QEAAAAAAAAlAQAAAAAAAAAAAAAAADwv74EAAAAAAAAvgQAAAAAAAAAAAAAAADwv8gEAAAAAAAAyAQAAAAAAAAAAAAAAADwv+0EAAAAAAAA7QQAAAAAAAAAAAAAAADwvwcFAAAAAAAABwUAAAAAAAAAAAAAAADwvw0GAAAAAAAADQYAAAAAAAAAAAAAAADwvx0GAAAAAAAAHQYAAAAAAAAAAAAAAADwv6oGAAAAAAAAqgYAAAAAAAAAAAAAAADwv7cGAAAAAAAAtwYAAAAAAAAAAAAAAADwvxMIAAAAAAAAEwgAAAAAAAAAAAAAAADwvx8IAAAAAAAAHwgAAAAAAAAAAAAAAADwv+oIAAAAAAAA6ggAAAAAAAAAAAAAAADwv/cIAAAAAAAA9wgAAAAAAAAAAAAAAADwvw"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "'"
					},
					"FAAAAOMIAAAAAAAA5AgAAAAAAAAAAAAA1wgAAAAAAADYCAAAAAAAAAAAAAANCAAAAAAAAA4IAAAAAAAAAAAAAAIIAAAAAAAAAwgAAAAAAAAAAAAApwYAAAAAAACoBgAAAAAAAAAAAACbBgAAAAAAAJwGAAAAAAAAAAAAAA8GAAAAAAAAEAYAAAAAAAAAAAAAAAYAAAAAAAABBgAAAAAAAAAAAAD7BAAAAAAAAPwEAAAAAAAAAAAAAOIEAAAAAAAA4wQAAAAAAAAAAAAAvgQAAAAAAAC/BAAAAAAAAAAAAAC1BAAAAAAAALYEAAAAAAAAAAAAAIwEAAAAAAAAjQQAAAAAAAAAAAAAhwQAAAAAAACIBAAAAAAAAAAAAAA7BAAAAAAAADwEAAAAAAAAAAAAAOQDAAAAAAAA5QMAAAAAAAAAAAAAoAMAAAAAAAChAwAAAAAAAAAAAAB4AwAAAAAAAHkDAAAAAAAAAAAAADoDAAAAAAAAOwMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAFAAAADYDAAAAAAAANgMAAAAAAAAAAAAAAADwvzoDAAAAAAAAOgMAAAAAAAAAAAAAAADwv3gDAAAAAAAAeAMAAAAAAAAAAAAAAADwv6ADAAAAAAAAoAMAAAAAAAAAAAAAAADwv+QDAAAAAAAA5AMAAAAAAAAAAAAAAADwvzsEAAAAAAAAOwQAAAAAAAAAAAAAAADwv4cEAAAAAAAAhwQAAAAAAAAAAAAAAADwv4wEAAAAAAAAjAQAAAAAAAAAAAAAAADwv7UEAAAAAAAAtQQAAAAAAAAAAAAAAADwv74EAAAAAAAAvgQAAAAAAAAAAAAAAADwv+IEAAAAAAAA4gQAAAAAAAAAAAAAAADwv/sEAAAAAAAA+wQAAAAAAAAAAAAAAADwvwAGAAAAAAAAAAYAAAAAAAAAAAAAAADwvw8GAAAAAAAADwYAAAAAAAAAAAAAAADwv5sGAAAAAAAAmwYAAAAAAAAAAAAAAADwv6cGAAAAAAAApwYAAAAAAAAAAAAAAADwvwIIAAAAAAAAAggAAAAAAAAAAAAAAADwvw0IAAAAAAAADQgAAAAAAAAAAAAAAADwv9cIAAAAAAAA1wgAAAAAAAAAAAAAAADwv+MIAAAAAAAA4wgAAAAAAAAAAAAAAADwvw"
				],
				[
					229,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAADcIAAAAAAAANwgAAAAAAAABAAAAIGoDAAAAAAAAagMAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcDAAAAAAAANwMAAAAAAAAAAAAAAADwvw"
				],
				[
					236,
					1,
					"left_delete",
					null,
					"AQAAAAoGAAAAAAAACgYAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsGAAAAAAAACwYAAAAAAAAAAAAAAADwvw"
				],
				[
					246,
					1,
					"left_delete",
					null,
					"BAAAAOUIAAAAAAAA5QgAAAAAAAABAAAAIM0GAAAAAAAAzQYAAAAAAAABAAAAIKYGAAAAAAAApgYAAAAAAAABAAAAIFoGAAAAAAAAWgYAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABAAAAFsGAAAAAAAAWwYAAAAAAAAAAAAAAADwv6cGAAAAAAAApwYAAAAAAAAAAAAAAADwv84GAAAAAAAAzgYAAAAAAAAAAAAAAADwv+YIAAAAAAAA5ggAAAAAAAAAAAAAAADwvw"
				],
				[
					249,
					1,
					"left_delete",
					null,
					"BAAAAPAIAAAAAAAA8AgAAAAAAAABAAAAINcGAAAAAAAA1wYAAAAAAAABAAAAILMGAAAAAAAAswYAAAAAAAABAAAAIGYGAAAAAAAAZgYAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABAAAAGcGAAAAAAAAZwYAAAAAAAAAAAAAAADwv7QGAAAAAAAAtAYAAAAAAAAAAAAAAADwv9gGAAAAAAAA2AYAAAAAAAAAAAAAAADwv/EIAAAAAAAA8QgAAAAAAAAAAAAAAADwvw"
				],
				[
					260,
					1,
					"right_delete",
					null,
					"AQAAABsGAAAAAAAAGwYAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsGAAAAAAAAGwYAAAAAAAAAAAAAAADwvw"
				],
				[
					276,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAPgGAAAAAAAA+QYAAAAAAAAAAAAA+QYAAAAAAAD6BgAAAAAAAAAAAAD6BgAAAAAAAPwGAAAAAAAAAAAAAPkGAAAAAAAA+wYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgGAAAAAAAA+AYAAAAAAAAAAAAAAADwvw"
				],
				[
					278,
					1,
					"left_delete",
					null,
					"AQAAAPkGAAAAAAAA+QYAAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsGAAAAAAAA+wYAAAAAAAAAAAAAAADwvw"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOcGAAAAAAAA6QYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcGAAAAAAAA5wYAAAAAAAAAAAAAAAAAAA"
				],
				[
					283,
					1,
					"left_delete",
					null,
					"AQAAAOcGAAAAAAAA5wYAAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkGAAAAAAAA6QYAAAAAAAAAAAAAAADwvw"
				],
				[
					288,
					1,
					"unindent",
					null,
					"AQAAAPoGAAAAAAAA+gYAAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoGAAAAAAAA+gYAAAAAAAAAAAAAAAAAAA"
				],
				[
					291,
					1,
					"reindent",
					null,
					"AQAAAPkGAAAAAAAA+wYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkGAAAAAAAA+QYAAAAAAAAAAAAAAAAAAA"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": "private"
					},
					"BwAAAPsGAAAAAAAA/AYAAAAAAAAAAAAA/AYAAAAAAAD9BgAAAAAAAAAAAAD9BgAAAAAAAP4GAAAAAAAAAAAAAP4GAAAAAAAA/wYAAAAAAAAAAAAA/wYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAEHAAAAAAAAAAAAAAEHAAAAAAAAAgcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsGAAAAAAAA+wYAAAAAAAAAAAAAAADwvw"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAIHAAAAAAAAAwcAAAAAAAAAAAAAAwcAAAAAAAAEBwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIHAAAAAAAAAgcAAAAAAAAAAAAAAADwvw"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": " TRUE"
					},
					"BQAAAAQHAAAAAAAABQcAAAAAAAAAAAAABQcAAAAAAAAGBwAAAAAAAAAAAAAGBwAAAAAAAAcHAAAAAAAAAAAAAAcHAAAAAAAACAcAAAAAAAAAAAAACAcAAAAAAAAJBwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQHAAAAAAAABAcAAAAAAAAAAAAAAADwvw"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "\noe"
					},
					"BAAAAPgGAAAAAAAA+QYAAAAAAAAAAAAA+QYAAAAAAAD7BgAAAAAAAAAAAAD7BgAAAAAAAPwGAAAAAAAAAAAAAPwGAAAAAAAA/QYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgGAAAAAAAA+AYAAAAAAAAAAAAAAADwvw"
				],
				[
					300,
					1,
					"left_delete",
					null,
					"AQAAAPwGAAAAAAAA/AYAAAAAAAABAAAAZQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0GAAAAAAAA/QYAAAAAAAAAAAAAAADwvw"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "rganization"
					},
					"CwAAAPwGAAAAAAAA/QYAAAAAAAAAAAAA/QYAAAAAAAD+BgAAAAAAAAAAAAD+BgAAAAAAAP8GAAAAAAAAAAAAAP8GAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAABBwAAAAAAAAAAAAABBwAAAAAAAAIHAAAAAAAAAAAAAAIHAAAAAAAAAwcAAAAAAAAAAAAAAwcAAAAAAAAEBwAAAAAAAAAAAAAEBwAAAAAAAAUHAAAAAAAAAAAAAAUHAAAAAAAABgcAAAAAAAAAAAAABgcAAAAAAAAHBwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwGAAAAAAAA/AYAAAAAAAAAAAAAAADwvw"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAcHAAAAAAAACAcAAAAAAAAAAAAACAcAAAAAAAAJBwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcHAAAAAAAABwcAAAAAAAAAAAAAAADwvw"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAkHAAAAAAAACgcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkHAAAAAAAACQcAAAAAAAAAAAAAAADwvw"
				],
				[
					304,
					1,
					"",
					null,
					"AQAAAAoHAAAAAAAACwcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoHAAAAAAAACgcAAAAAAAAAAAAAAADwvw"
				],
				[
					305,
					1,
					"",
					null,
					"AQAAAAoHAAAAAAAACgcAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsHAAAAAAAACwcAAAAAAAAAAAAAAADwvw"
				],
				[
					306,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAoHAAAAAAAADAcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoHAAAAAAAACgcAAAAAAAAAAAAAAADwvw"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "quaesto"
					},
					"BwAAAAsHAAAAAAAADAcAAAAAAAAAAAAADAcAAAAAAAANBwAAAAAAAAAAAAANBwAAAAAAAA4HAAAAAAAAAAAAAA4HAAAAAAAADwcAAAAAAAAAAAAADwcAAAAAAAAQBwAAAAAAAAAAAAAQBwAAAAAAABEHAAAAAAAAAAAAABEHAAAAAAAAEgcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsHAAAAAAAACwcAAAAAAAAAAAAAAADwvw"
				],
				[
					309,
					1,
					"left_delete",
					null,
					"AQAAABEHAAAAAAAAEQcAAAAAAAABAAAAbw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIHAAAAAAAAEgcAAAAAAAAAAAAAAADwvw"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "iotech"
					},
					"BgAAABEHAAAAAAAAEgcAAAAAAAAAAAAAEgcAAAAAAAATBwAAAAAAAAAAAAATBwAAAAAAABQHAAAAAAAAAAAAABQHAAAAAAAAFQcAAAAAAAAAAAAAFQcAAAAAAAAWBwAAAAAAAAAAAAAWBwAAAAAAABcHAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEHAAAAAAAAEQcAAAAAAAAAAAAAAADwvw"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABgHAAAAAAAAGQcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgHAAAAAAAAGAcAAAAAAAD////////vfw"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAAEHAAAAAAAAAgcAAAAAAAAAAAAAAgcAAAAAAAACBwAAAAAAAAEAAAB6",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIHAAAAAAAAAQcAAAAAAAAAAAAAAADwvw"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAPcGAAAAAAAA+AYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcGAAAAAAAA9wYAAAAAAAAAAAAAAADwvw"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": "ibub"
					},
					"BAAAAPgGAAAAAAAA+QYAAAAAAAAAAAAA+QYAAAAAAAD6BgAAAAAAAAAAAAD6BgAAAAAAAPsGAAAAAAAAAAAAAPsGAAAAAAAA/AYAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgGAAAAAAAA+AYAAAAAAAAAAAAAAADwvw"
				],
				[
					345,
					4,
					"left_delete",
					null,
					"BAAAAPsGAAAAAAAA+wYAAAAAAAABAAAAYvoGAAAAAAAA+gYAAAAAAAABAAAAdfkGAAAAAAAA+QYAAAAAAAABAAAAYvgGAAAAAAAA+AYAAAAAAAABAAAAaQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwGAAAAAAAA/AYAAAAAAAAAAAAAAADwvw"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "ub"
					},
					"AgAAAPgGAAAAAAAA+QYAAAAAAAAAAAAA+QYAAAAAAAD6BgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgGAAAAAAAA+AYAAAAAAAAAAAAAAADwvw"
				],
				[
					377,
					1,
					"right_delete",
					null,
					"AQAAANcGAAAAAAAA1wYAAAAAAABYAAAAIyMgVXNlIGdpdCAtLS0tCnVzZXRoaXM6OnVzZV9naXRodWIoCiAgb3JnYW5pc2F0aW9uID0gJ3F1YWVzdGlvdGVjaCcsCiAgcHJpdmF0ZSA9IFRSVUUKKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8HAAAAAAAA1wYAAAAAAAAAAAAAAADwvw"
				],
				[
					379,
					1,
					"right_delete",
					null,
					"AQAAANcGAAAAAAAA1wYAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcGAAAAAAAA1wYAAAAAAAAAAAAAAADwvw"
				],
				[
					381,
					1,
					"right_delete",
					null,
					"AQAAANcGAAAAAAAA1wYAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcGAAAAAAAA1wYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "inst/book/gni-relatorio.Rmd",
			"settings":
			{
				"buffer_size": 22967,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "---\ntitle: \"relatorio\"\nauthor: \"Luísa\"\ndate: \"05/12/2021\"\noutput:\n  pdf_document: default\n  html_document: default\n---\n# Relatório Final Diário do Clima\n\n**Equipe OKBR:**\n\n* Andre Assumpção;\n- Ariane Alves;\n- Fernanda Campagnucci;\n- Giulio Carvalho;\n- Juliana Trevine;\n- Luísa Coelho;\n- Murilo Machado;\n- Pedro Guimarães\n\n### Resumo\nProposta de relatório final do projeto Diário do Clima.\n\n## Introdução\n \nO Diário Oficial da União (DOU) é um importante veículo de comunicação nacional, criado em 1° de outubro de 1862,  sancionado pela Lei Imperial nº 1.177, após 54 anos da chegada da corte portuguesa ao Brasil. Sua função, desde então, é divulgar as leis e normas do país, de forma simples, direta e documental, sem qualquer tipo de contestação ou queixa, sendo este o instrumento em que o governo presta contas à sociedade ([Rocha, 2020](link)). Atualmente  o DOU pode ser acessado através do [link da Imprensa Nacional](https://www.gov.br/imprensanacional/pt-br) permitindo buscas por palavras-chave ou até mesmo uma busca avançada que permite o filtro por seções, data, busca por títulos ou conteúdo, entre outros. As seções básicas do DOU consistem em:\n\n1. Leis, decretos, resoluções, instruções normativas, portarias e outros atos normativos de interesse geral;\n2. Atos de interesse dos servidores da Administração Pública Federal;\n3.  Extratos de instrumentos contratuais (acordos, ajustes, autorizações de compra, contratos, convênios, ordens de execução de serviço, termos aditivos e instrumentos congêneres) editais de citação, intimação, notificação e concursos públicos, comunicados, avisos de licitação entre outros atos da administração pública decorrentes de disposição legal.\n\n Por conter tantas informações relevantes, o DOU é utilizado como fonte em diferentes níveis de pesquisa, principalmente para recuperação de informações. [Guerra et al. (2015)](https://www.scielo.br/j/rap/a/cXjcx6hgZ4r5XN3t6rd7SSJ/?lang=en), por exemplo, analisa a resposta das agências reguladoras no combate a COVID-19 através da busca de conteúdo no DOU e também das 11 agências reguladoras no país. Outros estudos contemplam a  análise regulatória de medicamentos no Brasil [(Feitoza-Silva et al., 2017)]( http://dx.doi.org/10.11606/issn.2316-9044.v18i2p122-156) e a inferência sobre risco de fraude nos contratos públicos  [(Lima et al., 2020)](https://aclanthology.org/2020.findings-emnlp.143.pdf)\n\nNo entanto, poucos estudos mencionam Diários Oficiais Municipais. [Xavier et al. (2015)](https://www.scielo.br/j/tinf/a/mJmTKbL94hj89q9p8HfCnLj/?format=pdf&lang=pt) propuseram uma arquitetura híbrida de indexação do Diário Municipal de Cachoeiro de Itapemirim - ES. \n\nNo cenário da administração pública municipal, o setor do Diário Oficial Municipal tem a atribuição de indexar e publicar todo o conteúdo gerado pelo Poder Executivo através dos Atos Normativos contidos em uma edição do Diário Oficial. Trata-se de uma tarefa nada trivial que consome tempo e recursos do setor, e quase sempre é auxiliada por ferramentas computacionais não específicas, o que compromete ainda mais a eficiência do processo. Extrair informações dos diários oficiais municipais pode ser muito útil para avaliação de políticas públicas, jornalismo, ou até mesmo como auditoria do governo.\n \nNeste sentido, o projeto Querido Diário já mapeou quase todos os diários oficiais dos 5.570 municípios brasileiros, obtendo raspadores para mais de 2.300 municípios, cerca de 41% do total. A  Open Knowledge Brasil junto com uma equipe de pessoas cientistas e engenheiras de dados e uma grande comunidade de colaboradores voluntários que trabalha no Querido diário alcançaram também com que qualquer formato de diário (PDF, Docx, RTF, HTML, JPEG, etc.) em .txt e fazer a extração e validação de CPFs e CNPJs dos diários oficiais. De modo a ampliar o projeto surge o Diário do Clima que foi um dos vencedores do edital da [Google News Initiative (GNI)](https://newsinitiative.withgoogle.com/). A GNI visa promover um jornalismo duradouro e diverso, no combate a desinformação em prol da transparência de dados.\n\nO projeto Diário do Clima tem como objetivo gerar uma plataforma de consulta sobre iniciativas e políticas de combate à mudanças climáticas nos 5.570 municípios brasileiros no qual culminará em uma importante fonte para jornalistas. Para isso será necessário segmentar informações sobre políticas e iniciativas de combate à mudanças climáticas nos diários oficiais dos municípios brasileiros através de mecanismos de inteligência artificial. \n\nPrincipais resultados atuais...\n\n### Explorando o Querido Diário\n\nPor lei, todo ato público, seja do Poder Executivo, seja do Legislativo ou do Judiciário, deve ser publicado em um diário oficial. Contudo, não existe padronização de diários oficiais no Brasil nem uma central de dados que permita que a sociedade civil acesse o conteúdo de diários de maneira fácil e rápida.  Para libertar os dados dos diários municipais, a Open Knowledge Brasil (OKBR) criou o projeto \"Querido Diário\", cujo objetivo é mapear, coletar e processar todos os diários municipais do país e disponibilizá-los em formato aberto para a sociedade civil.\n\nPara mapear diários oficiais municipais e extrair informações relevantes foi necessário compreenedr qual é a dimensão e escopo de um diário oficial municipal. Segundo o [Diário Oficial do município de São Paulo](http://www.docidadesp.imprensaoficial.com.br/Busca.aspx) o jornal é dividido em oito seções: Gabinete do Prefeito, Secretarias, Servidores, Concursos, Editais, Licitações, Câmara Municipal e Tribunal de Conta\nUm diário municipal está, teoricamente, categorizado logicamente em algumas seções. Essas seções correspondem a exigências legais de publicação de atos públicos. Contudo, como os municípios não seguem padrão uniforme de divulgação de informações, essas seções podem não ter títulos comuns ou mesma estrutura e nem são publicadas em todos os diários – afinal, nem sempre todos os atos públicos cuja publicação é exigida por lei ocorrem todos os dias. De modo geral, as seções obrigatórias são:\n\n- Atos Normativos: Obrigações ou direitos aos cidadãos fruto de atividade do poder executivo (ou legislativo) municipal. \n- Atos de Pessoal: Mudanças nas atividades dos funcionários municipais, contemplando ingresso em carreira pública, exoneração, concessão de afastamento temporário, etc.\n- Contas Públicas: Obrigações de dívida dos municípios e peça orçamentária em respeito à LRF.\n- Audiências Públicas: Informes para a população sobre audiências públicas referentes à atividade do governo municipal e implementação de políticas públicas locais.\n- Licitações: Informes sobre os principais instrumentos de contratação de bens e serviços privados no Brasil pelo setor público.\n- Processos Disciplinares: Informes de processos investigativos e disciplinares sobre conduta de servidores públicos ou contratantes do poder executivo municipal.\n- Processos Tributários: Informes de acórdãos entre o fisco municipal e os contribuintes em processos administrativos tributários que afetam a arrecadação do município.\n- Conselhos Municipais: Informes sobre a fiscalização de políticas públicas por parte da sociedade civil.\n\nComo o interesse da sociedade civil por conteúdo de diários oficiais normalmente é focado em um tema, a segmentação do diário surge como nossa primeira prioridade de ciência de dados, uma vez que nos permitiria \"fatiar\" o conteúdo e permitir buscas apenas em seções desejadas. Portanto, uma tarefa fundamental para a equipe da OKBR seria uma forma automatizada de segmentação do diário nestas categorias.\n\nParágrafo sobre os diferentes projetos:\nHistórico (o que veio com a pandemia/Fundação Lemann/Lemann - Ensino remoto/Diário do Clima)\nO projeto Querido Diário não surgiu do nada, ele veio inspirado pela [Operação Serenata de Amor](https://serenata.ai/) que criou a Rosie, uma robô que através de inteligência artficial consegue rastrear irregularidades nos gastos do Congresso Nacional. E também do [Open Data Index](https://ok.org.br/projetos/open-data-index/) A OKBR já tinha uma ideia de acessibilizar os diários oficiais e com tantas outras conquistas foi possível aproveitar o conhecimento acumulado para criar o projeto Querido Diário. Atualmente, a equipe da OKBR também atua em outros projetos e desde o início da pandemia da COVID-19 foram realizados projetos voltados para solucionar problemas relacionados a transparênca de dados.. O projeto ´[Sorria #Estamos Vigiando](https://ok.org.br/projetos/sorria-estamosvigiando/), [Monitor da INDA](https://ok.org.br/inda/), [Transparência COVID-19](https://transparenciacovid19.ok.org.br/).\n\nCom uma equipe qualificada experiência e capacidade o Querido Diário compila os diários oficiais de todos os municípios brasileiros através de inteligência artifical. O projeto possui código aberto, ou seja, qualquer pessoa pode contribuir no projeto ou entender como a programação é arquitetada. De maneira simplificada os diários oficias são coletados dos seus respectivos endereços eletrônicos e submetidos a raspadores (_spiders_) em que filtram o resultado para extrair informações como o formato do arquivo, tamanho e ser convertido em um documento acessível de PDF, concomitantemente são extraídas outras informações do arquivo como data, seção do diário que são armazenadas em uma base de metadados. ...  Onde fica o arquivo bruto são extraídos o texto em formato TXT em formato aberto. Onde estão os metadados é realizado uma busca textual com o mecanismo de busca de análise de dados ElasticSearch, onde é possível indexar as informações dos diários e armazená-las centralmente facilitando futuras buscas. Após isso, uma interação entre os indexadores do ElasticSearch e o texto puro é realizada passando estes dados para a Interface de Programação de Aplicações (API) (usado pela máquina) que é integrada a uma [platadorma de visualização](https://queridodiario.ok.org.br/) para o usuário.\n\n\n                - Mapeamento dos diários\n                - Raspagem e estruturação dos dados\n                - Utilização e análise do produto\n\n### Diário do Clima\n\nA partir do prêmio da Inovação promovido pela _Google News Initiative_ foi possível o início do Projeto Diário do Clima que visa monitorar os atos de autorização e normativos relacionados a meio ambiente e clima publicados diariamente nos diários oficiais em todos os municípios brasileiros. A partir dos passos avançados pelo Querido Diário é possível aplicar algumas das técnicas previamente utilizadas na plataforma Diário do Clima. Para o projeto ser possível é necessário raspar e processar os documentos, com a utilização de mecanismos de inteligência artificial para categorizar cada ato e organizá-los por entidades relevantes permitindo a filtragem e priorização da informação. O Diário do Clima será uma plataforma que ajudará principalmente jornalistas e comunicadores.\n\nO maior desafio da solução é selecionar os diários oficiais que tenham informações relevantes no âmbito do jornalismo ambiental e climático. Por isso essa iniciativa possui a colaboração de sete organizações: [((o))Eco](https://oeco.org.br/), [Eco Nordeste](https://agenciaeconordeste.com.br/), [Agência Envolverde](https://envolverde.com.br/), [InfoAmazonia](https://infoamazonia.org/), [ClimaInfo](https://climainfo.org.br/), [#Colabora](https://projetocolabora.com.br/) e [Política por Inteiro](https://www.politicaporinteiro.org/). O objetivo final do projeto é ter uma plataforma aberta em que possa servir de consulta para rastrear o que foi desenvolvido nos municípios quanto à temática ambiental para ter controle e manter transparência nos atos.  \n\nA principal diferença dessa palataforma com a que foi criada pelo Querido Diário diz respeito ao escopo. O Querido Diário buscava filtrar os diários municipais sem conteúdo estruturado, em contrapartida o Diário do Clima busca concentrar em uma plataforma de visualização apenas diários oficiais que tenham conteúdos onde hajam informações relevantes relacionadas ao meio ambiente e clima nos municípios brasileiros. Dessa maneira será possível manter um banco de informações confiável e acessível corroborando com a proposta da [Google News Initiative](https://newsinitiative.withgoogle.com/) construindo um ecossistema de notícias mais sustentável, diversificado e inovador. Por trás do projeto trabalha uma imensa equipe formada desde cientista de dados a jornalistas, criando uma plataforma plural e acessível.\n\n\n      - Quais informações serão coletadas?\n      - Escopo/objetivo do diário do clima.\n\n### Marcos regulatórios - Meio Ambiente\nNo que diz respeito aos municípios na [Constituição Federal de 1988](https://www.planalto.gov.br/ccivil_03/Constituicao/Constituicao.htm):\n  - Art. 24 Inciso 3° Inexistindo lei federal sobre normas gerais, os Estados  exercerão a competência legislativa plena, para atender a suas  peculiaridades\n  - Art. 30. Compete aos Municípios: I - legislar sobre assuntos de interesse local; II – suplementar a legislação federal e a estadual  no que couber (...)\n  - Arts. 34 e 35: Das intervençoes feitas pela União;\n  \nUm dos principais marcos ambientais dentro da legislação brasileira foi A Política Nacional do Meio Ambiente ([Lei 6.938/81](https://www.planalto.gov.br/ccivil_03/LEIS/L6938.htm)) que visa o desenvolvimento sócio-econômico atendendo aos princípios de ação governamental, racionalização, planejamento, proteção, controle e zoneamento das atividades, proteção e educação (Art. 2°). As diretrizes da Política Nacional do Meio Ambiente são formuladas em normas e planos, destinados a orientar a ação dos Governos da União, dos Estados, do Distrito Federal, dos Territórios e dos Municípios no que se relaciona com a preservação da qualidade ambiental e manutenção do equilíbrio ecológico, observados os princípios estabelecidos no art. 2º desta Lei (Art. 5°).\n\n\n  * SISNAMA\n\n    - Órgão  Superior: Assessora Presidente da República na formulação de políticas (CSMA - Conselho Superior do Meio Ambiente)\n      - Órgão consultivo e deliberativo: CONAMA - determina, quando julga necessário, a realização de estudos das alternativas e das possíveis consequências ambientais de projetos públicos ou privados, requisitando aos órgãos federais, estaduais e municipais, bem assim a entidades privadas, as informações indispensáveis para apreciação dos estudos de impacto ambiental, e respectivos relatórios, no caso de obras ou atividades de significativa degradação ambiental, especialmente nas áreas consideradas patrimônio nacional. -**PODER DE LEGISLAR**\n      - Órgão central: Secretaria do Meio Ambiente da Presidência da República - Ministério do Meio Ambiente;\n      - Órgãos executores: IBAMA e Instituto Chico Mendes\n      - Órgãos setoriais: órgãos ou entidades integrantes da Administração Pública Federal, direta ou indireta, bem como as fundações instituídas pelo Poder Público, cujas entidades estejam, total ou parcialmente, associadas às de preservação da qualidade ambiental ou de disciplinamento do uso de recursos ambientais\n    - Órgãos Seccionais: órgãos ou entidades estaduais responsáveis pela execução de programas, projetos e pelo controle e fiscalização de atividades capazes de provocar a degradação ambiental. (Secretarias Estaduais de Meio Ambiente, IMA, IAP, CETESB, Inea, Polícia Militar Ambiental)\n    - Órgãos Locais: órgãos ou entidades municipais, responsáveis pelo controle e fiscalização dessas atividades, nas suas respectivas jurisdições\n\n  * Fica alterado:\n\n    Art. 3° da [Lei n° 10.165, de 27 de dezembro de 2000](https://www.planalto.gov.br/ccivil_03/LEIS/L10165.htm#art1): A Lei n° 6.938, de 1981, passa a vigorar acrescida dos seguintes artigos: [\"Art. 17-Q](https://www.planalto.gov.br/ccivil_03/LEIS/L6938.htm#art17q). É o Ibama autorizado a celebrar convênios com os Estados, os Municípios e o Distrito Federal para desempenharem atividades de fiscalização ambiental, podendo repassar-lhes parcela da receita obtida com a TCFA.\" **Transferência de _recurso com pessoal_**\n    \n #### Instrumentos da PNMA:\n\n  - Padrões de qualidade ambiental;\n  - Zoneamento ambiental;\n  - Avaliação de impactos ambientais;\n  - Licenciamento e revisão de atividades efetiva ou potencialmente poluidoras;\n  - Incentivos à produção e instalação de equipamentos e a criação ou absorção de tecnologia, voltados para a melhoria da qualidade ambiental;\n  - criação de espaços territoriais especialmente protegidos pelo Poder Público federal;\n  - Sistema nacional de informações sobre o meio ambiente;\n  - Cadastro Técnico Federal de Atividades e Instrumentos de Defesa Ambiental;\n  - penalidades disciplinares ou compensatórias ao não cumprimento das medidas necessárias à preservação ou correção da degradação ambiental;\n  - instituição do Relatório de Qualidade do Meio Ambiente, a ser divulgado anualmente pelo IBAMA;\n  - garantia da prestação de informações relativas ao Meio Ambiente, obrigando-se o Poder Público a produzí-las, quando inexistentes.\n\n  - Cadastro Técnico Federal de atividades potencialmente poluidoras e/ou utilizadoras dos recursos ambientais. \n  - instrumentos econômicos, como concessão florestal, servidão ambiental, seguro ambiental e outros.\n\n\nCom a promulgação da Constituição Federal em 1988, o meio ambiente passou ser direito difuso e coletivo.\n  \n###### Meio Ambiente na Constituição Federal:\n  - Art. 225;\n  - [Lei de Crimes Ambientais (1998)][http://www.planalto.gov.br/ccivil_03/LEIS/L9605.htm]: Art. 73. Os valores arrecadados em pagamento de multas por infração ambiental serão revertidos ao Fundo Nacional do Meio Ambiente, criado pela [Lei nº 7.797, de 10 de julho de 1989](http://www.planalto.gov.br/ccivil_03/LEIS/L7797.htm), Fundo Naval, criado pelo [Decreto nº 20.923, de 8 de janeiro de 1932](https://legislacao.planalto.gov.br/legisla/legislacao.nsf/viwTodos/04737B762935FE7A032569FA0045A2E0?OpenDocument&HIGHLIGHT=1,), fundos estaduais ou municipais de meio ambiente, ou correlatos, conforme dispuser o órgão arrecadador.\n\n\n    > obrigatoriedade de que todos os as propriedades e posses rurais do País façam parte do Sistema Nacional de Cadastro Ambiental Rural (Sicar)\n\n    Art. 3o da  [Lei n° 10.165, de 27 de dezembro de 2000](https://www.planalto.gov.br/ccivil_03/LEIS/L10165.htm#art1): A Lei n° 6.938, de 1981 passa a vigorar acrescida dos seguintes [Anexos VIII](https://www.planalto.gov.br/ccivil_03/LEIS/L10165.htm#anexoviii) (atividades potencialmente poluidoras) e [IX:](https://www.planalto.gov.br/ccivil_03/LEIS/L10165.htm#anexoix)(TCFA) \n\n  #### Órgãos\n\n  _MMA_: criado em 1992 (marco da Rio 92)\n\n  - Lei das águas (1997):\n\n  - Lei de Crimes Ambientais (1998):\n  - Política Nacional de Educação Ambiental (1999):\n  - Sistema Nacional de Unidades de Conservação (SNUC)(2000):\n  - Lei de Gestão de Florestas Públicas (2006):\n  \n##### Planos e Programas do MMA\n\n- [Programa Floresta+][https://www.gov.br/mma/pt-br/assuntos/servicosambientais/florestamais/ProgramaFloresta.pdf];\n- [Plano Nacional para Controle do Desmatamento Ilegal e Recuperação da Vegetação Nativa][https://www.gov.br/mma/pt-br/assuntos/servicosambientais/controle-de-desmatamento-e-incendios-florestais/PlanoNacionalparaControledoDesmatamento20202023.pdf] existem diretrizes para os municípios, consequentemente no [Plano Operativo 2020 - 2023][https://www.gov.br/mma/pt-br/assuntos/servicosambientais/controle-de-desmatamento-e-incendios-florestais/PlanoOperativo20202023.pdf] - Implementar programas e projetos de Pagamentos por Serviços Ambientais (PSA) existe responsabilidade das prefeituras municipais; \n  - Nenhum dos municípios descritos [aqui][https://www.gov.br/mma/pt-br/assuntos/servicosambientais/controle-de-desmatamento-e-incendios-florestais/pdf/Listagemmunicpiosprioritriosparaaesdepreveno2021.pdf] estão na amostra inicial.\n- [PLANAVEG Plano Nacional de Recuperação da Vegetação Nativa][https://www.gov.br/mma/pt-br/assuntos/servicosambientais/ecossistemas-1/planaveg_plano_nacional_recuperacao_vegetacao_nativa.pdf] - Entidades municipais como Secretarias de Meio Ambiente e Conselhos Municipais de Meio Ambiente para atuar na integração entre estâncias, sensibilização da população, e capacitação, bem como recuperação de áreas.\n- [REDD++][http://redd.mma.gov.br/images/central-de-midia/pdf/publicacoes/notainformativa2018_captacaodescentralizacao.pdf];\n- [ARPA, A3P, Cerrado Sustentável, Zoneamento ecológico, dentre outros][https://antigo.mma.gov.br/programas-mma.html];\n  \n\n  _IBAMA_: Poder de polícia ambiental, responsável por recolher e repassar recursos da TCFA, ITR, CAR, APP, RL. objetivos institucionais relativos ao licenciamento ambiental, ao controle da qualidade ambiental, à autorização de uso dos recursos naturais e à fiscalização, monitoramento e controle ambiental e ações supletivas de competência da União, conforme legislação ambiental. Zoneamento e avaliação de impacto ambiental. CTF\n\n  - APP: Área de preservação permanente\n  - AUR: Área de Uso Restrito\n  - RL: Reserva Legal\n  - CAR: Cadastro Ambiental Rural é o registro público eletrônico de âmbito nacional, obrigatório para todos os imóveis rurais, com a finalidade de integrar as informações ambientais das propriedades e posses rurais referentes às APP, AUR, RL, de remanescentes de florestas e demais formas de vegetação nativa, e das áreas consolidadas, compondo base de dados para controle, monitoramento, planejamento ambiental e econômico e combate ao desmatamento.\n    - PRA: Programa de Apoio e Incentivo à Conservação do Meio Ambiente e aos Programas de Regularização Ambiental \n    - ITR: O CAR gera créditos tributários por meio de deduções na base  de cálculo do Imposto Territorial Rural\n  - CTF: Cadastro Técnico Federal  identifica as pessoas físicas e jurídicas sob controle ambiental e fiscalização ambiental, conforme previsto em legislação federal ou de âmbito nacional, gerando informações para a gestão ambiental no Brasil.\n    - TCFA: Taxa de Controle e Fiscalização Ambiental é um tributo para controle e fiscalização das atividades potencialmente poluidoras e utilizadoras de recursos naturais\n\n  \n  _ICMBio_:  apresentar e editar normas e padrões de gestão de Unidades de Conservação (UC) federais; propor a criação, regularização fundiária e gestão das UC federais; e apoiar a implementação do Sistema Nacional de Unidades de Conservação (SNUC).  Contribui para a recuperação de áreas degradadas em UC. Fiscaliza e aplica penalidades administrativas ambientais ou compensatórias aos responsáveis pelo não cumprimento das medidas necessárias à preservação ou correção da degradação ambiental. Monitora o uso público e a exploração econômica dos recursos naturais nas UC onde isso for permitido, obedecidas as exigências legais e de sustentabilidade do meio ambiente. geração e disseminação sistemática de informações e conhecimentos relativos à gestão de UCs, da conservação da biodiversidade e do uso dos recursos faunísticos, pesqueiros e florestais.  Contribui para a implementação do Sistema Nacional de Informações sobre o Meio Ambiente (Sinima) e aplica, no âmbito de sua competência, dispositivos e acordos internacionais relativos à gestão ambiental. Elabora o Relatório de Gestão das UC.\n\n  - UC: Unidade de Conservação\n\n    _Setor privado_\n\n  - Principal: ISO da  série 14000;\n  - Outros: Certificação Orgânica; Comércio Justo;  EurepGap (Boas Práticas Agrícolas (GAP); Certificação Socioambiental e Produção Integrada\n \n\n## Metodologia\nA metodologia de trabalho foi sub-dividida em 5 etapas, sendo: Pré-processamento, mecanismos de busca, stopwords e stoplist, refinamento e avaliação de precisão.\n\n>> **1** Pré-processamento\n\nProcesso realizado previamente pelo Querido Diário, consiste em mapear os Diários Oficiais Municipais, obter raspadores para cada um destes e ser capaz de converter os documentos em texto puro e metadados, armazenando através do ElasticSearch.\n\n>> **2** Mecanismos de Busca\n\nA recuperação de informações (RI) pode ser feita através de um sistema que funciona a partir de diferente mecanismos, sejam análise textual, filtragem de informação por meio da extração de stopwords, técnicas de redução de palavras a seus radicais (stemming), técnicas de indexação, arquivo invertido, modelos matemáticos e estatísticos para a representação de documentos, de consultas e a definição de coeficientes de similaridades, estruturas de categorização e de expansão de consultas por meio da utilização de Thesaurus (Aires, 2005). Para este projeto foram utilizados seis tipos de busca, a saber:\n\n  *_Intervalar_*\n  \n      Retorna documentos com base na ordem e proximidade dos termos correspondentes. A consulta de intervalos usa regras de correspondência, construídas a partir de um pequeno conjunto de definições. Essas regras são então aplicadas aos termos de um campo especificado. As definições produzem sequências de intervalos mínimos que abrangem termos em um corpo de texto. \n    *Exemplo*:\n   \n  *_Querystring_*\n  \n      Aqui é utilizada uma sintaxe para analisar e dividir o conjunto de caracteres de consulta fornecida com base em operadores booleanos como AND, NOT e OR. Cada texto é analisado independente e após isso são retornados os documentos. Também é possível utilizar a consulta query_string para criar uma pesquisa complexa que inclui caracteres versáteis, pesquisas em vários campos e muito mais. A desvantagem desse método é que se a sintaxe for inválida um erro será retornado na busca.\n    *Exemplo*:\n    \n  *_Booleana_*\n  \n  \n      Uma consulta que corresponde a documentos correspondentes a combinações booleanas de outras consultas. A consulta é construída usando uma ou mais cláusulas booleanas, cada cláusula com uma ocorrência digitada. Os tipos de ocorrência são:\n      - must: O termo deve, obrigatoriamente, aparecer no documento.\n      - filter: O termos deve aparecer nos documentos correspondentes.\n      - should: O termo deve aparecer no documento.\n      - must_not: O termo não deve, obrigatoriamente, aparecer no documento.\n      \n \n  *_Boosting_*\n  \n      Retorna documentos que correspondem a uma consulta positiva enquanto reduz a pontuação de relevância dos documentos que correspondem a uma consulta negativa. Essa consulta permite rebaixar certos documentos sem excluí-los dos resultados da pesquisa.\n      \n  *_Fuzzy_*\n  \n  \n     Retorna documentos que contêm termos semelhantes ao termo de pesquisa medido por uma distância de edição. Uma distância de edição é o número de alterações de um caractere necessárias para transformar um termo em outro. Essas mudanças podem incluir:\n\n- Mudando um personagem (box → fox)\n- Removendo um caractere (black → lack)\n- Inserindo um personagem (sic → sick)\n- Transpondo dois caracteres adjacentes (act → cat)\n     \n   Para encontrar termos semelhantes, a consulta do tipo fuzzy cria um conjunto de todas as variações ou expansões possíveis do termo de pesquisa dentro de uma distância de edição especificada. A consulta retorna correspondências exatas para cada expansão.\n  \n  *_Expressões regulares_*\n  \n  \n    Retorna documentos que contêm termos que correspondem a uma expressão regular. Uma expressão regular é uma maneira de combinar padrões em dados usando caracteres de espaço reservado, chamados de operadores. Para obter uma lista de operadores suportados pela consulta regexp.\n\n>> **3** Stopwords e Stoplists\n   \n   O processo de criação das palavras de busca é acompanhado de um longo trabalho envolvendo uma curadoria de jornalistas especializados. Foram selecionados voluntariamente 7 jornalistas para compor a equipe de curadoria e avaliar os documentos coletados através dos mecanismos de busca e avaliar qualitativamente os resultados. No final da 1° etapa é previsto que cada um dos curadores avaliem cerca de 768 termos de busca.\n   \n   \n\n>> **4** Refinamento\n\n   Após a coleta dos documentos e definição dos termos de busca será feita uma nova rodada de coleta de documentos para refinar os processos de busca. Essa etapa é necessária para deixar a plataforma mais eficaz e amigável, bem como melhorar o processamento dos documentos. \n\n>> **5** Avaliação de precisão\n\n  Análise de dados..\n  - Índices positivos e negativos;\n  - Relação Qualidade do documento do ElasticSearch X Curadoria;\n  - Qualidade dos highlights.\nSeguindo a equação 1\n\n$$\nPrecisão = n° de documentos relevantes/n° de documentos recuperados\n$$        \n\n##### Cronograma do projeto\n\n",
			"file": "relatorio/md_files/relatorio.rmd",
			"file_size": 29273,
			"file_write_time": 132842413585751744,
			"settings":
			{
				"buffer_size": 28357,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"mde_match_heading_hashes",
					null,
					"AQAAAG9bAAAAAAAAflsAAAAAAAAQAAAAIyMgTWV0b2RvbG9naWEgCg",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "inst/book/07-desenvolvimento-futuro.Rmd",
			"settings":
			{
				"buffer_size": 307,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					18,
					1,
					"unindent",
					null,
					"AQAAADQAAAAAAAAANAAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAMwAAAAAAAAA1AQAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "inst/book/04-politica-ambiental-no-brasil.Rmd",
			"settings":
			{
				"buffer_size": 291,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "inst/book/05-metodologia.Rmd",
			"settings":
			{
				"buffer_size": 7443,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "inst/book/02-querido-diario.Rmd",
			"redo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "Pword"
					},
					"BQAAALoSAAAAAAAAuhIAAAAAAAABAAAAZLkSAAAAAAAAuRIAAAAAAAABAAAAcrgSAAAAAAAAuBIAAAAAAAABAAAAb7cSAAAAAAAAtxIAAAAAAAABAAAAd7YSAAAAAAAAthIAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAuxIAAAAAAAC7EgAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 9040,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/MarkdownPreview/Markdown.sublime-build",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"JSON"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"Property List"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Block Style)"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Default Style)"
				],
				[
					"Packages/R-Box/support/R Markdown.sublime-build",
					""
				],
				[
					"Packages/User/pandoc.md2pdf.sublime-build",
					""
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					""
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Install Package"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Install Package Locally"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Test Package"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Check Package"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Document Package"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Build Package Site"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Preview Package Site"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Build README"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Render R Markdown to HTML"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Render R Markdown to PDF"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Render R Markdown"
				]
			],
			[
				"Packages/R-Box/support/R Markdown.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/MarkdownPreview/Markdown.sublime-build",
					""
				],
				[
					"Packages/R-Box/support/R Markdown.sublime-build",
					""
				],
				[
					"Packages/User/pandoc.md2pdf.sublime-build",
					""
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					""
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Install Package"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Install Package Locally"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Test Package"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Check Package"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Document Package"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Build Package Site"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Preview Package Site"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Build README"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Render R Markdown to HTML"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Render R Markdown to PDF"
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					"Render R Markdown"
				]
			],
			[
				"Packages/R-Box/support/R Markdown.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/bookdown.sublime-build",
					""
				],
				[
					"Packages/User/bookdown.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/bookdown.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"git pull",
				"git: pull"
			],
			[
				"git fe",
				"git: fetch"
			],
			[
				"git fetch",
				"git: fetch"
			],
			[
				"git st",
				"git: status"
			],
			[
				"r mark",
				"Set Syntax: R Markdown"
			],
			[
				"git remote ad",
				"git: remote add"
			],
			[
				"git status",
				"git: status"
			],
			[
				"term",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"git sta",
				"git: status"
			],
			[
				"r ma",
				"Set Syntax: R Markdown"
			],
			[
				"wor",
				"Word Wrap: Toggle"
			],
			[
				"gite pull",
				"git: pull with rebase"
			],
			[
				"git s",
				"git: status"
			],
			[
				"git fet",
				"Code Folding: Fold Tag Attributes"
			],
			[
				"git mer",
				"git: merge"
			],
			[
				"r mar",
				"Set Syntax: R Markdown"
			],
			[
				"rmarkd",
				"Set Syntax: R Markdown"
			],
			[
				"r markd",
				"Set Syntax: R Markdown"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"rmark",
				"Set Syntax: R Markdown"
			],
			[
				"rm",
				"Set Syntax: R Markdown"
			],
			[
				"git stat",
				"git: status"
			],
			[
				"dupli",
				"File: Duplicate"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"dupl",
				"File: Duplicate"
			],
			[
				"git pus",
				"git: push"
			],
			[
				" git st",
				"git: status"
			],
			[
				"set syntax ram",
				"Set Syntax: R Markdown"
			],
			[
				"gis stat",
				"git: status"
			],
			[
				"set r mark",
				"Set Syntax: R Markdown"
			],
			[
				"set r",
				"Set Syntax: R Markdown"
			],
			[
				"buid",
				"Build With: bookdown"
			],
			[
				"build boo",
				"Build With: bookdown - Run"
			],
			[
				"terminal",
				"Terminal: Open in project folder"
			],
			[
				"iterm",
				"Snippet: random intercept model"
			],
			[
				"build",
				"Build: New Build System"
			],
			[
				"rma",
				"Set Syntax: R Markdown"
			],
			[
				"git pu",
				"git: push"
			],
			[
				"send",
				"SendCode: Choose Program"
			],
			[
				"sen",
				"SendCode: Choose Program"
			],
			[
				"sendd",
				"SendCode: Choose Program"
			],
			[
				"fet",
				"git: fetch"
			],
			[
				"build ",
				"Build With: bookdown"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"sor",
				"Sort Lines"
			],
			[
				"wrod",
				"Word Wrap: Toggle"
			],
			[
				"wotd",
				"Word Wrap: Toggle"
			],
			[
				"set rmak",
				"Set Syntax: R Markdown"
			],
			[
				"fetch",
				"git: fetch"
			],
			[
				"ch",
				"git: checkout"
			],
			[
				"git check",
				"git: checkout"
			],
			[
				"check",
				"git: checkout"
			],
			[
				"swap",
				"BracketHighlighter: Swap Brackets"
			],
			[
				"new bran",
				"git: checkout new branch"
			],
			[
				"che",
				"git: checkout"
			],
			[
				"git pull from",
				"git: pull from branch"
			],
			[
				"git che",
				"git: checkout"
			],
			[
				"chec",
				"git: checkout"
			],
			[
				"branc",
				"git: branch"
			],
			[
				"brean",
				"BracketHighlighter: Toggle Global Enable"
			],
			[
				"terminus",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"git",
				"git: fetch"
			],
			[
				"syntax r mar",
				"Set Syntax: R Markdown"
			],
			[
				"git log",
				"git: log"
			],
			[
				"renma",
				"Rename File"
			],
			[
				"rena",
				"Rename File"
			],
			[
				"format",
				"SQL Beautifier: Format Current SQL File"
			],
			[
				"file move",
				"File: Move"
			],
			[
				"duplicat",
				"File: Duplicate"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"brackets",
				"BracketHighlighter: Swap Brackets"
			],
			[
				"open",
				"Terminal: Open in project folder"
			],
			[
				"open term",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"lowe",
				"Convert Case: Lower Case"
			],
			[
				"move",
				"File: Move"
			],
			[
				"au",
				"Auto Wrap: Toggle"
			],
			[
				"wr",
				"Wrap at Ruler"
			],
			[
				"open in b",
				"File: Open In Browser - Testing Server"
			],
			[
				"syntax do",
				"Set Syntax: Dockerfile"
			],
			[
				"gitlab set",
				"gitlab: set remote for integration"
			],
			[
				"git remote remo",
				"git: remote add"
			],
			[
				"git remo",
				"gitlab: set remote for integration"
			],
			[
				"git remote",
				"git: remote rename"
			],
			[
				"push to r",
				"git: push to branch name"
			],
			[
				"push",
				"git: push"
			],
			[
				"git remote add",
				"git: remote add"
			],
			[
				"git set ",
				"github: set remote for integration"
			],
			[
				"git set u",
				"github: set remote for integration"
			],
			[
				"ter",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"git set remo",
				"github: set remote for integration"
			],
			[
				"git remote a",
				"git: remote add"
			],
			[
				"termi",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"termin",
				"Terminal: Open in project folder"
			],
			[
				"re",
				"Rename File"
			],
			[
				"remove",
				"BracketHighlighter: Remove Brackets"
			],
			[
				"ope",
				"Terminal: Open in project folder"
			],
			[
				"syntax doc",
				"Set Syntax: Dockerfile"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"end",
				"SFTP: Enable Debug Mode"
			],
			[
				"up",
				"SFTP: Upload File"
			],
			[
				"sorte",
				"Sort Lines"
			],
			[
				"snippet fu",
				"Snippet: Function"
			],
			[
				"class",
				"Snippet: New Class"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"r markdown",
				"Set Syntax: R Markdown"
			],
			[
				"set syntax r ma",
				"Set Syntax: R Markdown"
			],
			[
				"r-ide ",
				"Preferences: R-IDE Settings"
			],
			[
				"r-box",
				"Preferences: R-Box Settings"
			],
			[
				"browse ",
				"Preferences: Browse Packages"
			],
			[
				"package con",
				"Package Control: Discover Packages"
			],
			[
				"r markdown prefere",
				"Preferences: MarkdownEditing Settings – User"
			],
			[
				"wra",
				"Auto Wrap: Toggle"
			],
			[
				"auto",
				"Auto Wrap: Toggle"
			],
			[
				"package instal",
				"Package Control: Install Package"
			],
			[
				"r-bo",
				"Preferences: R-Box Settings"
			],
			[
				"R",
				"Preferences: R-IDE Settings"
			],
			[
				"markdown ex",
				"Set Syntax: Markdown Extended"
			],
			[
				"rn",
				"Rename File"
			],
			[
				"syntax rm",
				"Set Syntax: R Markdown"
			],
			[
				"git remote ",
				"git: remote add"
			],
			[
				"git init",
				"git: init"
			],
			[
				"wrap",
				"Wrap at Ruler"
			],
			[
				"form",
				"Pretty JSON: Format JSON"
			],
			[
				"a",
				"Auto Wrap: Toggle"
			],
			[
				"GIT STA",
				"git: status"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 350.0,
		"history":
		[
			"exit",
			"os.getcwd()",
			"os.getwd()",
			"import os",
			"pwd",
			"os.getwd()"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/book",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/relatorio",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/relatorio/md_files"
	],
	"file_history":
	[
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/WORDLIST",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/book/02-querido-diario.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/relatorio/md_files/relatorio.rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/book/01-intro.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/relatorio/relatorio.md",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/book/06-resultados.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/book/03-diario-do-clima.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/README.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/.gitignore",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/book/index.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/book/_output.yml",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/inst/book/_bookdown.yml",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/man/run_app.Rd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/LICENSE.md",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/gnir-viz.sublime-project",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/R/globals.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/dev/02_dev.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/R/app_config.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/R/app_ui.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/R/golem_utils_server.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/R/golem_utils_ui.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/R/run_app.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/tests/testthat.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/tests/testthat/test-golem-recommended.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/gnir/scratch/tutorial.txt",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/Gráficos e Tabelas.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/04-tecnico-II.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/Achados.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/R/utils-harmonizacao.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/mod_02_orgaos.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/Hipotese Consolidada 01.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/Achados.rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/Sistematização Hipótese 01.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/R/mod_processo.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/achados.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/05-tecnico-final.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/.gitignore",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/sistematização.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/.Rprofile",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/planilha_destinatários_questionário.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/Sistematização.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/R/utils-app.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/Sistematização Hipótese 01.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/tramitacao_judicial.csv",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/man/tempo_lab.Rd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/mod_05_metodologia.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/Perguntas ABJ.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/apendices/ap-3-1-dados-lai.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidScrapers/data-raw/processos-rfb.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/data-raw/app_texto.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/data-raw/survey_data.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/dev/run_dev.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/graficos_02_orgaos.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/apendices/ap-4-3-survey-dashboard.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/apendices/ap-1-1-estrutura-brasil.Rmd",
		"/Users/andre/Library/Application Support/Sublime Text 3/Packages/User/bookdown.sublime-build",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/_output.yml",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/apendices/ap-3-2-dados-webscraping.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/hipotese-04.Rmd",
		"/Users/andre/Library/Application Support/Sublime Text 3/Packages/User/R Markdown.sublime-settings",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/01-plano-de-trabalho.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/apendices/ap-1-2-iniciativas-brasil.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/bidTrib.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/assets/bib/book.bib",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/03-tecnico-I.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/_bookdown.yml",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/utils-css.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/pres/apresentacao.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/app_ui.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/graficos_04_transparencia.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/app_server.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/inst/metodologia.md",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/.gitignore",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/update-app.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/mod_03_experiencia.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/mod_01_amostra.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/data-raw/enviar_emails_questionarios.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/mod_04_transparencia.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/inst/book/bid_trib_abj.Rmd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/dev/04_scratch.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/man/app_texto.Rd",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/graficos_03_experiencia.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/data-raw/states.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/app_config.R",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acisViz/R/visualize-misd.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/graficos_01_amostra.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/data-raw/glossary.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/graficos_colunas.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/fct_helpers.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/graficos_geral.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/graficos_pizza.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/graficos_restantes.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/R/mod_pgfn.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/R/app_server.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/R/app_config.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/R/mod_04_transparência.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/dev/02_dev.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidTrib/R/app_ui.R",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/bidSurvey/.Rbuildignore",
		"/Users/andre/Dropbox (Personal)/Documents/Neuralmind/Enforce/data-raw/eventos.txt",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/AnalisePy/01-parse-movements.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/acispy/merge/merge.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/misc/SoG-main/Old Files/test_parse_ccis.sql",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/misc/SoG-main/Old Files/sog_prob_match_proto_update.sql",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/acis_processing.sh",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/acispy/extract/extract.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/04import_sql.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/untitled.sql",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/data/offnff_jul2021.txt",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/data/judgment_jul2021.txt",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/store/store.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/misc/SoG-main/acis_create_tables.sql",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/couting.log",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/02process_records.py",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2020 Querido Diário/toolbox/queridodiario_toolbox/gazette.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/parse_crstat_record_types.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/extraction.log",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/tests/test_acispy.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/acispy/helper/helper.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/acispy/acispy.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/acispy/helper/__init__.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/.Rhistory",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/processing.log",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/dev/01extract_files.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acispy/acispy/globals.py",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/misc/SoG-main/parse_crstat_record_types.py",
		"/Users/andre/Dropbox (Personal)/Documents/Research/2021 STF Repercussão Geral/TesesComRepercussaoGeral.html",
		"/Users/andre/OneDrive - University of North Carolina at Chapel Hill/Criminal Justice Innovation Lab/projects/2021 ACIS/acisViz/R/app_ui.R"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Estudo de Caso",
			"'",
			"\"",
			"\\( (.*) \\)",
			"( ",
			"\""
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"'",
			"\\(\\1\\)"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": ".Rbuildignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 109,
						"regions":
						{
						},
						"selection":
						[
							[
								80,
								80
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 45,
								"count": 4,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/andre/Dropbox%20%28Personal%29/Documents/Research/2020%20Querido%20Dia%CC%81rio/gnir/.Rbuildignore",
							"remote_loading": false,
							"sorttabs_lastactivated": 1637679502.2,
							"synced": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "dev/01_start.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2251,
						"regions":
						{
						},
						"selection":
						[
							[
								563,
								563
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"AsioHeaders\tInstalled Package",
									"AsioHeaders"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiagrammeR\tInstalled Package",
									"DiagrammeR"
								],
								[
									"DiagrammeRsvg\tInstalled Package",
									"DiagrammeRsvg"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"NLP\tInstalled Package",
									"NLP"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RMySQL\tInstalled Package",
									"RMySQL"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RgoogleMaps\tInstalled Package",
									"RgoogleMaps"
								],
								[
									"SnowballC\tInstalled Package",
									"SnowballC"
								],
								[
									"TTR\tInstalled Package",
									"TTR"
								],
								[
									"V8\tInstalled Package",
									"V8"
								],
								[
									"XML\tInstalled Package",
									"XML"
								],
								[
									"abjDash\tInstalled Package",
									"abjDash"
								],
								[
									"abjData\tInstalled Package",
									"abjData"
								],
								[
									"abjutils\tInstalled Package",
									"abjutils"
								],
								[
									"addinslist\tInstalled Package",
									"addinslist"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"auth0\tInstalled Package",
									"auth0"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bbmle\tInstalled Package",
									"bbmle"
								],
								[
									"bdsmatrix\tInstalled Package",
									"bdsmatrix"
								],
								[
									"bidScrapers\tInstalled Package",
									"bidScrapers"
								],
								[
									"bidSurvey\tInstalled Package",
									"bidSurvey"
								],
								[
									"bidTrib\tInstalled Package",
									"bidTrib"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bitops\tInstalled Package",
									"bitops"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"bookdown\tInstalled Package",
									"bookdown"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"chromote\tInstalled Package",
									"chromote"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"clisymbols\tInstalled Package",
									"clisymbols"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"countrycode\tInstalled Package",
									"countrycode"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"crul\tInstalled Package",
									"crul"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"d3r\tInstalled Package",
									"d3r"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"deplearning\tInstalled Package",
									"deplearning"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"docxtractr\tInstalled Package",
									"docxtractr"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"downloader\tInstalled Package",
									"downloader"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dtplyr\tInstalled Package",
									"dtplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"echarts4r\tInstalled Package",
									"echarts4r"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"esaj\tInstalled Package",
									"esaj"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extraInserts\tInstalled Package",
									"extraInserts"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastGHQuad\tInstalled Package",
									"fastGHQuad"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"flexsurv\tInstalled Package",
									"flexsurv"
								],
								[
									"flexsurvcure\tInstalled Package",
									"flexsurvcure"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"formattable\tInstalled Package",
									"formattable"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"gargle\tInstalled Package",
									"gargle"
								],
								[
									"gdtools\tInstalled Package",
									"gdtools"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggmap\tInstalled Package",
									"ggmap"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggridges\tInstalled Package",
									"ggridges"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gmailr\tInstalled Package",
									"gmailr"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"googleAuthR\tInstalled Package",
									"googleAuthR"
								],
								[
									"googledrive\tInstalled Package",
									"googledrive"
								],
								[
									"googlesheets4\tInstalled Package",
									"googlesheets4"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highcharter\tInstalled Package",
									"highcharter"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpcode\tInstalled Package",
									"httpcode"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"icongram\tInstalled Package",
									"icongram"
								],
								[
									"ids\tInstalled Package",
									"ids"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"influenceR\tInstalled Package",
									"influenceR"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janeaustenr\tInstalled Package",
									"janeaustenr"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"leaflet\tInstalled Package",
									"leaflet"
								],
								[
									"leaflet.providers\tInstalled Package",
									"leaflet.providers"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lineprof\tInstalled Package",
									"lineprof"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"metathis\tInstalled Package",
									"metathis"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"mstate\tInstalled Package",
									"mstate"
								],
								[
									"muhaz\tInstalled Package",
									"muhaz"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"obsFase3\tInstalled Package",
									"obsFase3"
								],
								[
									"obsutils\tInstalled Package",
									"obsutils"
								],
								[
									"odbc\tInstalled Package",
									"odbc"
								],
								[
									"officer\tInstalled Package",
									"officer"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"pagedown\tInstalled Package",
									"pagedown"
								],
								[
									"pander\tInstalled Package",
									"pander"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"patchwork\tInstalled Package",
									"patchwork"
								],
								[
									"pdftools\tInstalled Package",
									"pdftools"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"progressr\tInstalled Package",
									"progressr"
								],
								[
									"proj4\tInstalled Package",
									"proj4"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"pryr\tInstalled Package",
									"pryr"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"qpdf\tInstalled Package",
									"qpdf"
								],
								[
									"qsacnpj\tInstalled Package",
									"qsacnpj"
								],
								[
									"quadprog\tInstalled Package",
									"quadprog"
								],
								[
									"quantmod\tInstalled Package",
									"quantmod"
								],
								[
									"rJava\tInstalled Package",
									"rJava"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"randomNames\tInstalled Package",
									"randomNames"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"raster\tInstalled Package",
									"raster"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"reactR\tInstalled Package",
									"reactR"
								],
								[
									"reactable\tInstalled Package",
									"reactable"
								],
								[
									"reactlog\tInstalled Package",
									"reactlog"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readstata13\tInstalled Package",
									"readstata13"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rgeos\tInstalled Package",
									"rgeos"
								],
								[
									"rjson\tInstalled Package",
									"rjson"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rlist\tInstalled Package",
									"rlist"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstpm2\tInstalled Package",
									"rstpm2"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rsvg\tInstalled Package",
									"rsvg"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"rvg\tInstalled Package",
									"rvg"
								],
								[
									"s2\tInstalled Package",
									"s2"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"servr\tInstalled Package",
									"servr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyWidgets\tInstalled Package",
									"shinyWidgets"
								],
								[
									"shinyalert\tInstalled Package",
									"shinyalert"
								],
								[
									"shinyauthr\tInstalled Package",
									"shinyauthr"
								],
								[
									"shinydashboard\tInstalled Package",
									"shinydashboard"
								],
								[
									"shinyjs\tInstalled Package",
									"shinyjs"
								],
								[
									"slam\tInstalled Package",
									"slam"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sodium\tInstalled Package",
									"sodium"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spData\tInstalled Package",
									"spData"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"sunburstR\tInstalled Package",
									"sunburstR"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"thinkr\tInstalled Package",
									"thinkr"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyfast\tInstalled Package",
									"tidyfast"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidytext\tInstalled Package",
									"tidytext"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tm\tInstalled Package",
									"tm"
								],
								[
									"toOrdinal\tInstalled Package",
									"toOrdinal"
								],
								[
									"tokenizers\tInstalled Package",
									"tokenizers"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"triebeard\tInstalled Package",
									"triebeard"
								],
								[
									"tzdb\tInstalled Package",
									"tzdb"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"unix\tInstalled Package",
									"unix"
								],
								[
									"urltools\tInstalled Package",
									"urltools"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"webshot2\tInstalled Package",
									"webshot2"
								],
								[
									"websocket\tInstalled Package",
									"websocket"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"widgetframe\tInstalled Package",
									"widgetframe"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"wk\tInstalled Package",
									"wk"
								],
								[
									"wordcloud\tInstalled Package",
									"wordcloud"
								],
								[
									"wordcloud2\tInstalled Package",
									"wordcloud2"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xaringan\tInstalled Package",
									"xaringan"
								],
								[
									"xaringanExtra\tInstalled Package",
									"xaringanExtra"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xlsx\tInstalled Package",
									"xlsx"
								],
								[
									"xlsxjars\tInstalled Package",
									"xlsxjars"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"methods",
								"utils",
								"stats",
								"graphics",
								"base"
							],
							"WordCount":
							{
								"changes": 438,
								"count": 230,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/andre/Dropbox%20%28Personal%29/Documents/Research/2020%20Querido%20Dia%CC%81rio/gnir/dev/01_start.R",
							"remote_loading": false,
							"sorttabs_lastactivated": 1639769417.02,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 215.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "inst/book/gni-relatorio.Rmd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22967,
						"regions":
						{
						},
						"selection":
						[
							[
								695,
								695
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 1,
								"count": 2777,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										694,
										695
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										687,
										688
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/andre/Dropbox%20%28Personal%29/Documents/Research/2020%20Querido%20Dia%CC%81rio/gnir/inst/book/gni-relatorio.Rmd",
							"mde.match_heading_hashes": false,
							"remote_loading": false,
							"sorttabs_lastactivated": 1639769519.85,
							"synced": false,
							"syntax": "Packages/knitr/knitr-Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "relatorio/md_files/relatorio.rmd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28357,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 1,
								"count": 3604,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/andre/Dropbox%20%28Personal%29/Documents/Research/2020%20Querido%20Dia%CC%81rio/gnir/relatorio/md_files/relatorio.rmd",
							"mde.match_heading_hashes": false,
							"remote_loading": false,
							"sorttabs_lastactivated": 1639769700.89,
							"synced": false,
							"syntax": "Packages/R-IDE/R Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "inst/book/07-desenvolvimento-futuro.Rmd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 307,
						"regions":
						{
						},
						"selection":
						[
							[
								51,
								51
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 1,
								"count": 41,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/andre/Dropbox%20%28Personal%29/Documents/Research/2020%20Querido%20Dia%CC%81rio/gnir/inst/book/07-desenvolvimento-futuro.Rmd",
							"mde.match_heading_hashes": false,
							"remote_loading": false,
							"sorttabs_lastactivated": 1639769771.39,
							"synced": false,
							"syntax": "Packages/knitr/knitr-Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "inst/book/04-politica-ambiental-no-brasil.Rmd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 291,
						"regions":
						{
						},
						"selection":
						[
							[
								67,
								67
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 0,
								"count": 24,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/andre/Dropbox%20%28Personal%29/Documents/Research/2020%20Querido%20Dia%CC%81rio/gnir/inst/book/04-politica-ambiental-no-brasil.Rmd",
							"mde.match_heading_hashes": false,
							"remote_loading": false,
							"sorttabs_lastactivated": 1639769824.54,
							"synced": false,
							"syntax": "Packages/knitr/knitr-Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "inst/book/05-metodologia.Rmd",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 7443,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 0,
								"count": 954,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/andre/Dropbox%20%28Personal%29/Documents/Research/2020%20Querido%20Dia%CC%81rio/gnir/inst/book/05-metodologia.Rmd",
							"mde.match_heading_hashes": false,
							"remote_loading": false,
							"sorttabs_lastactivated": 1639769844.28,
							"synced": false,
							"syntax": "Packages/knitr/knitr-Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 619.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 7,
					"file": "inst/book/02-querido-diario.Rmd",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9040,
						"regions":
						{
						},
						"selection":
						[
							[
								926,
								926
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 10,
								"count": 1149,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/andre/Dropbox%20%28Personal%29/Documents/Research/2020%20Querido%20Dia%CC%81rio/gnir/inst/book/02-querido-diario.Rmd",
							"mde.match_heading_hashes": false,
							"remote_loading": false,
							"sorttabs_lastactivated": 1639770634.84,
							"synced": false,
							"syntax": "Packages/knitr/knitr-Markdown.tmLanguage",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.490033480137,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GitSavvy":
	{
		"height": 240.0
	},
	"output.SFTP":
	{
		"height": 126.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 305.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.markdown":
	{
		"height": 126.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.show_commit_info":
	{
		"height": 108.0
	},
	"pinned_build_system": "Packages/User/bookdown.sublime-build",
	"project": "gnir-viz.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"word",
				"inst/WORDLIST"
			],
			[
				"tempo_lab",
				"bidTrib/man/tempo_lab.Rd"
			],
			[
				"",
				"2021 ACIS/.Rhistory"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 305.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 648.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 226.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
